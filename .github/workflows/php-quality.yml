name: PHP Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  php-tests:
    name: PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2', '8.3']
        wordpress: ['6.1', '6.2', '6.3', '6.4', 'latest']
        exclude:
          # WordPress 6.1 doesn't support PHP 8.3
          - php: '8.3'
            wordpress: '6.1'
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mysqli, mbstring, xml, curl
          tools: composer, phpcs, phpstan
          coverage: xdebug

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup WordPress test environment
        run: |
          bash bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wordpress }}
        if: matrix.wordpress != 'latest'

      - name: Setup WordPress test environment (latest)
        run: |
          bash bin/install-wp-tests.sh wordpress_test root root localhost latest
        if: matrix.wordpress == 'latest'

      - name: Run PHPUnit tests
        run: composer test

      - name: Run PHPCS
        run: composer lint

      - name: Run PHPStan
        run: composer analyse --no-progress --error-format=github

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: php-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mysqli, mbstring, xml, curl
          tools: composer
          coverage: xdebug

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup WordPress test environment
        run: bash bin/install-wp-tests.sh wordpress_test root root localhost latest

      - name: Generate coverage report
        run: composer test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: php
          name: php-coverage
          fail_ci_if_error: false