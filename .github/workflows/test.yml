name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  php-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']
        wordpress-version: ['5.9', '6.0', '6.1', '6.2', '6.3']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, intl, fileinfo, ftp
        coverage: xdebug

    - name: Install Composer dependencies
      run: |
        if [ -f composer.json ]; then
          composer install --prefer-dist --no-progress --no-suggest
        else
          composer init --no-interaction
          composer require --dev phpunit/phpunit "^9.0" --no-update
          composer install --prefer-dist --no-progress
        fi

    - name: Setup WordPress test environment
      run: |
        bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 ${{ matrix.wordpress-version }}
      env:
        WP_VERSION: ${{ matrix.wordpress-version }}

    - name: Run PHPUnit tests
      run: |
        if [ -f vendor/bin/phpunit ]; then
          vendor/bin/phpunit --coverage-clover=coverage.xml
        else
          phpunit --coverage-clover=coverage.xml
        fi

    - name: Upload PHP coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: php
        name: php-${{ matrix.php-version }}-wp-${{ matrix.wordpress-version }}

  javascript-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['16', '18', '20']

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript checks
      run: npm run build

    - name: Run JavaScript tests
      run: npm run test -- --coverage

    - name: Upload JS coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: javascript
        name: node-${{ matrix.node-version }}

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [php-tests, javascript-tests]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build assets
      run: npm run build

    - name: Setup WordPress environment
      run: |
        docker-compose -f docker-compose.test.yml up -d
        sleep 30

    - name: Run E2E tests
      run: npx playwright test

    - name: Run Accessibility tests
      run: npx playwright test tests/accessibility/

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: test-results/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: docker-compose -f docker-compose.test.yml down

  cross-browser-tests:
    runs-on: ubuntu-latest
    needs: [php-tests, javascript-tests]
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Build assets
      run: npm run build

    - name: Setup WordPress environment
      run: |
        docker-compose -f docker-compose.test.yml up -d
        sleep 30

    - name: Run tests on ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }}

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: test-results/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: docker-compose -f docker-compose.test.yml down