{
  "config": {
    "configFile": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/playwright.config.js",
    "rootDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {},
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "test-results/junit.xml"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "firefox",
        "name": "firefox",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "webkit",
        "name": "webkit",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Microsoft Edge",
        "name": "Microsoft Edge",
        "testDir": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.js",
          "**/*.spec.ts"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.53.2",
    "workers": 12,
    "webServer": {
      "command": "docker-compose -f docker-compose.test.yml up",
      "port": 8080,
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [],
  "errors": [
    {
      "message": "ReferenceError: require is not defined in ES module scope, you can use import instead\nThis file is being treated as an ES module because it has a '.js' file extension and '/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.",
      "stack": "ReferenceError: require is not defined in ES module scope, you can use import instead\nThis file is being treated as an ES module because it has a '.js' file extension and '/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\n    at /mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests/accessibility/AccessibilityTest.spec.js:1:35",
      "location": {
        "file": "/mnt/wsl/docker-desktop-bind-mounts/Ubuntu/24b0728dd0a07c84fb417c90ff8f4603c130b435bf3a4b412910aa414ec68ea8/tests/accessibility/AccessibilityTest.spec.js",
        "column": 35,
        "line": 1
      },
      "snippet": "\u001b[90m   at \u001b[39maccessibility/AccessibilityTest.spec.js:1\n\n> 1 | const { test, expect, devices } = require('@playwright/test');\n    |                                   ^\n  2 | const AxeBuilder = require('@axe-core/playwright').default;\n  3 |\n  4 | test.describe('Nuclear Engagement Accessibility Tests', () => {"
    },
    {
      "message": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "stack": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments."
    }
  ],
  "stats": {
    "startTime": "2025-07-01T15:41:50.258Z",
    "duration": 160.63600000000224,
    "expected": 0,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}