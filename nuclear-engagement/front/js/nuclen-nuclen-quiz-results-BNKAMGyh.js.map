{"version":3,"mappings":"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","names":["buildResultsHtml","optin","questions","state","html","buildOptinInlineHTML","__vitePreload","comment","_","i","_a","registerShowDetailsHandler","idx","q","ua","escapeHtml","el","registerRetakeHandler","finalContainer","progBar","questionCount","renderQuestion","renderOptinBeforeResultsFlow","ui","onFinal","qContainer","aContainer","explContainer","nextBtn","mountOptinBeforeResults","renderFinal","attachInlineOptinHandlers"],"ignoreList":[],"sources":["../../../src/front/ts/nuclen-quiz-results.ts"],"sourcesContent":["// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-results.ts\r\n// -----------------------------------------------------------------------------\r\nimport type { QuizQuestion, OptinContext } from './nuclen-quiz-types';\r\n// Opt-in functions will be imported dynamically when needed\r\nimport { escapeHtml } from './nuclen-quiz-utils';\r\n\r\n// Globals injected by wp_localize_script\r\ndeclare const NuclenStrings: {\r\n\tretake_test: string;\r\n\tyour_score: string;\r\n\tperfect: string;\r\n\twell_done: string;\r\n\tretake_prompt: string;\r\n\tcorrect: string;\r\n\tyour_answer: string;\r\n};\r\n\r\ndeclare function gtag(...args: unknown[]): void;\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\tnuclearEngagementShowQuizQuestionDetails?: (idx: number) => void;\r\n\tnuclearEngagementRetakeQuiz?: () => void;\r\n\t}\r\n}\r\n\r\nexport interface QuizUIRefs {\r\n\tqContainer: HTMLElement;\r\n\taContainer: HTMLElement;\r\n\texplContainer: HTMLElement;\r\n\tnextBtn: HTMLElement;\r\n\tfinalContainer: HTMLElement;\r\n\tprogBar: HTMLElement;\r\n}\r\n\r\nexport interface QuizState {\r\n        currIdx: number;\r\n        score: number;\r\n        userAnswers: number[];\r\n}\r\n\r\nasync function buildResultsHtml(\r\n\toptin: OptinContext,\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n): Promise<string> {\r\n\tlet html = '';\r\n\tif (optin.enabled && optin.position === 'with_results') {\r\n\t\tconst { buildOptinInlineHTML } = await import('./nuclen-quiz-optin');\r\n\t\thtml += buildOptinInlineHTML(optin);\r\n\t}\r\n\r\n\thtml += `\r\n<div id=\"nuclen-quiz-results-title\" class=\"nuclen-fg\">${NuclenStrings.your_score}</div>\r\n<div id=\"nuclen-quiz-results-score\" class=\"nuclen-fg\" aria-live=\"polite\" aria-atomic=\"true\">\r\n${state.score} / ${questions.length}\r\n</div>`;\r\n\tconst comment =\r\n\t\tstate.score === questions.length\r\n\t\t\t? NuclenStrings.perfect\r\n\t\t\t: state.score > questions.length / 2\r\n\t\t\t\t? NuclenStrings.well_done\r\n\t\t\t\t: NuclenStrings.retake_prompt;\r\n\thtml += `<div id=\"nuclen-quiz-score-comment\" aria-live=\"polite\">${comment}</div>`;\r\n\r\n\thtml += '<div id=\"nuclen-quiz-result-tabs-container\">';\r\n\tquestions.forEach((_, i) => {\r\n\t\thtml += `\r\n<button class=\"nuclen-quiz-result-tab\" onclick=\"nuclearEngagementShowQuizQuestionDetails(${i})\">${i + 1}</button>`;\r\n\t});\r\n\thtml += '</div><div id=\"nuclen-quiz-result-details-container\" class=\"nuclen-fg dashboard-box\"></div>';\r\n\r\n\tif (window.NuclenCustomQuizHtmlAfter?.trim()) {\r\n\t\thtml += `\r\n<div id=\"nuclen-quiz-end-message\" class=\"nuclen-fg\">\r\n${window.NuclenCustomQuizHtmlAfter}\r\n</div>`;\r\n\t}\r\n\r\n\thtml += `\r\n<button id=\"nuclen-quiz-retake-button\" onclick=\"nuclearEngagementRetakeQuiz()\">${NuclenStrings.retake_test}</button>`;\r\n\r\n\treturn html;\r\n}\r\n\r\nfunction registerShowDetailsHandler(\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n): void {\r\n\t// Clean up any existing handler before assigning new one\r\n\tif (window.nuclearEngagementShowQuizQuestionDetails) {\r\n\t\tdelete window.nuclearEngagementShowQuizQuestionDetails;\r\n\t}\r\n\t\r\n\twindow.nuclearEngagementShowQuizQuestionDetails = (idx: number): void => {\r\n\t\tconst q = questions[idx];\r\n\t\tconst ua = state.userAnswers[idx];\r\n\t\t(document.getElementById('nuclen-quiz-result-details-container') as HTMLElement).innerHTML = `\r\n<p class=\"nuclen-quiz-detail-question\">${escapeHtml(q.question)}</p>\r\n<p class=\"nuclen-quiz-detail-correct\"><strong>${NuclenStrings.correct}</strong> ${escapeHtml(q.answers[0])}</p>\r\n${\r\n\tua === 0\r\n\t\t? `<p class=\"nuclen-quiz-detail-chosen\"><strong>${NuclenStrings.your_answer}</strong> ${escapeHtml(q.answers[0])} <span class=\"nuclen-quiz-checkmark\">✔️</span></p>`\r\n\t\t: `<p class=\"nuclen-quiz-detail-chosen\"><strong>${NuclenStrings.your_answer}</strong> ${escapeHtml(q.answers[ua] ?? '[No data]')}</p>`\r\n}\r\n<p class=\"nuclen-quiz-detail-explanation\">${escapeHtml(q.explanation)}</p>`;\r\n\t\tArray.from(document.getElementsByClassName('nuclen-quiz-result-tab')).forEach((el) =>\r\n\t\t\tel.classList.remove('nuclen-quiz-result-active-tab'),\r\n\t\t);\r\n\t\tdocument\r\n\t\t\t.getElementsByClassName('nuclen-quiz-result-tab')[idx]?.classList.add(\r\n\t\t\t\t'nuclen-quiz-result-active-tab',\r\n\t\t\t);\r\n\t};\r\n\twindow.nuclearEngagementShowQuizQuestionDetails(0);\r\n}\r\n\r\nfunction registerRetakeHandler(\r\n\tstate: QuizState,\r\n\tfinalContainer: HTMLElement,\r\n\tprogBar: HTMLElement,\r\n\tquestionCount: number,\r\n\trenderQuestion: () => void,\r\n): void {\r\n\t// Clean up any existing handler before assigning new one\r\n\tif (window.nuclearEngagementRetakeQuiz) {\r\n\t\tdelete window.nuclearEngagementRetakeQuiz;\r\n\t}\r\n\t\r\n\twindow.nuclearEngagementRetakeQuiz = (): void => {\r\n\t\tstate.currIdx = 0;\r\n\t\tstate.score = 0;\r\n\t\tstate.userAnswers.length = 0;\r\n\t\tfinalContainer.innerHTML = '';\r\n\t\tfinalContainer.classList.add('nuclen-quiz-hidden');\r\n\t\tprogBar.style.width = `${(1 / questionCount) * 100}%`;\r\n\t\trenderQuestion();\r\n\t};\r\n}\r\n\r\nexport async function renderOptinBeforeResultsFlow(\r\n\tui: QuizUIRefs,\r\n\toptin: OptinContext,\r\n\tonFinal: () => void,\r\n): Promise<void> {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, finalContainer } = ui;\r\n\tqContainer.innerHTML = '';\r\n\taContainer.innerHTML = '';\r\n\texplContainer.innerHTML = '';\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\r\n\tconst { mountOptinBeforeResults } = await import('./nuclen-quiz-optin');\r\n\tmountOptinBeforeResults(finalContainer, optin, onFinal, onFinal);\r\n}\r\n\r\nexport async function renderFinal(\r\n\tui: QuizUIRefs,\r\n\toptin: OptinContext,\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n\trenderQuestion: () => void,\r\n): Promise<void> {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, finalContainer, progBar } = ui;\r\n\tqContainer.innerHTML = '';\r\n\taContainer.innerHTML = '';\r\n\texplContainer.innerHTML = '';\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\tfinalContainer.classList.remove('nuclen-quiz-hidden');\r\n\tfinalContainer.innerHTML = await buildResultsHtml(optin, questions, state);\r\n\tfinalContainer.setAttribute('aria-live', 'polite');\r\n\r\n\tif (optin.enabled && optin.position === 'with_results') {\r\n\t\tconst { attachInlineOptinHandlers } = await import('./nuclen-quiz-optin');\r\n\t\tattachInlineOptinHandlers(optin);\r\n\t}\r\n\r\n\tregisterShowDetailsHandler(questions, state);\r\n\tregisterRetakeHandler(state, finalContainer, progBar, questions.length, renderQuestion);\r\n\r\n\tif (typeof gtag === 'function') {\r\n\t\tgtag('event', 'nuclen_quiz_end');\r\n\t}\r\n}\r\n"],"file":"front/js/nuclen-nuclen-quiz-results-BNKAMGyh.js"}