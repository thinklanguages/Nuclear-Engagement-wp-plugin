{"version":3,"mappings":"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","names":["shuffle","arr","a","i","j","isValidEmail","email","escapeHtml","str","c","storeOptinLocally","name","url","ctx","res","logger.error","err","submitToWebhook","updateProgress","progBar","currIdx","total","renderQuestion","questions","state","ui","checkAnswer","qContainer","aContainer","explContainer","nextBtn","q","shuffled","ans","idx","correctIdx","handler","el","origIdx","clickListener","keyListener","e","initQuiz","quizContainer","finalContainer","maxQuestions","maxAnswers","optin","_a","nextBtnClickHandler","showNext","cleanup","shuffledIdx","btns","finalCb","renderFinal","__vitePreload","renderOptinBeforeResultsFlow"],"ignoreList":[],"sources":["../../../src/front/ts/nuclen-quiz-utils.ts","../../../src/front/ts/nuclen-quiz-progress.ts","../../../src/front/ts/nuclen-quiz-question.ts","../../../src/front/ts/nuclen-quiz-main.ts"],"sourcesContent":["// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-utils.ts\r\n// -----------------------------------------------------------------------------\r\nimport type { OptinContext } from './nuclen-quiz-types';\r\nimport * as logger from './logger';\r\n\r\nexport function shuffle<T>(arr: T[]): T[] {\r\n\tconst a = [...arr];\r\n\tfor (let i = a.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t[a[i], a[j]] = [a[j], a[i]];\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nexport const isValidEmail = (email: string): boolean => /.+@.+\\..+/.test(email);\r\n\r\nexport const escapeHtml = (str: string): string =>\r\n\tstr.replace(/[&<>\"']/g, (c) =>\r\n\t\t({ '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' }[c] || c),\r\n\t);\r\n\r\nexport const storeOptinLocally = async (\r\n\tname: string,\r\n\temail: string,\r\n\turl: string,\r\n\tctx: OptinContext\r\n): Promise<void> => {\r\n\tif (!ctx.ajaxUrl || !ctx.ajaxNonce) return;\r\n\ttry {\r\n\t\tconst res = await fetch(ctx.ajaxUrl, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n\t\t\tbody: new URLSearchParams({\r\n\t\t\t\taction: 'nuclen_save_optin',\r\n\t\t\t\tnonce: ctx.ajaxNonce,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\turl,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tif (!res.ok) {\r\n\t\t\tlogger.error('[NE] Local opt-in failed', res.status);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tlogger.error('[NE] Local opt-in network error', err);\r\n\t}\r\n};\r\n\r\nexport const submitToWebhook = async (\r\n\tname: string,\r\n\temail: string,\r\n\tctx: OptinContext\r\n): Promise<void> => {\r\n\tif (!ctx.webhook) return;\r\n\ttry {\r\n\t\tconst res = await fetch(ctx.webhook, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ name, email }),\r\n\t\t});\r\n\t\tif (!res.ok) {\r\n\t\t\tlogger.error('[NE] Webhook responded with', res.status);\r\n\t\t\tthrow new Error(String(res.status));\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tlogger.error('[NE] Webhook request error', err);\r\n\t\tthrow err;\r\n\t}\r\n};\r\n","// src/front/ts/nuclen-quiz-progress.ts\r\n\r\nexport function updateProgress(\r\n\tprogBar: HTMLElement,\r\n\tcurrIdx: number,\r\n\ttotal: number,\r\n): void {\r\n\tprogBar.style.width = `${((currIdx + 1) / total) * 100}%`;\r\n}\r\n","// src/front/ts/nuclen-quiz-question.ts\r\n\r\nimport type { QuizQuestion } from './nuclen-quiz-types';\r\nimport { shuffle, escapeHtml } from './nuclen-quiz-utils';\r\nimport type { QuizUIRefs, QuizState } from './nuclen-quiz-results';\r\nimport { updateProgress } from './nuclen-quiz-progress';\r\n\r\nexport function renderQuestion(\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n\tui: QuizUIRefs,\r\n\tcheckAnswer: (origIdx: number, shuffledIdx: number, correctIdx: number) => void,\r\n): void {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, progBar } = ui;\r\n\tconst q = questions[state.currIdx];\r\n\r\n\tqContainer.innerHTML = `\r\n\t<div id=\"nuclen-quiz-question-number\" aria-live=\"polite\" aria-atomic=\"true\">\r\n\t\t${state.currIdx + 1}/${questions.length}\r\n\t</div>\r\n\t<div class=\"nuclen-quiz-title\" role=\"heading\" aria-level=\"2\">${escapeHtml(q.question)}</div>`;\r\n\r\n\tconst shuffled = shuffle(\r\n\t\tq.answers.map((ans, idx) => ({ ans, idx })).filter((a) => a.ans.trim()),\r\n\t);\r\n\r\n\taContainer.innerHTML = shuffled\r\n\t\t.map(\r\n\t\t\t(a, i) => `\r\n\t\t<button\r\n\t\t\tclass=\"nuclen-quiz-answer-button nuclen-quiz-possible-answer\"\r\n\t\t\tdata-orig-idx=\"${a.idx}\"\r\n\t\t\tdata-testid=\"quiz-answer\"\r\n\t\t\ttabindex=\"0\"\r\n\t\t\taria-label=\"Answer ${i + 1}: ${escapeHtml(a.ans)}\"\r\n\t\t>${escapeHtml(a.ans)}</button>`,\r\n\t\t)\r\n\t\t.join('');\r\n\r\n\tconst correctIdx = shuffled.findIndex((a) => a.idx === 0);\r\n\r\n\t/* reset */\r\n\texplContainer.innerHTML = '';\r\n\texplContainer.classList.add('nuclen-quiz-hidden');\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\tupdateProgress(progBar, state.currIdx, questions.length);\r\n\r\n\t/* one-shot answer handler */\r\n\tconst handler = (el: HTMLElement) => {\r\n\t\tconst origIdx = parseInt(el.getAttribute('data-orig-idx') || '0', 10);\r\n\t\tcheckAnswer(origIdx, shuffled.findIndex((a) => a.idx === origIdx), correctIdx);\r\n\t\taContainer.removeEventListener('click', clickListener);\r\n\t\taContainer.removeEventListener('keydown', keyListener);\r\n\t};\r\n\r\n\tconst clickListener = (e: Event) => {\r\n\t\tconst el = e.target as HTMLElement;\r\n\t\tif (!el.matches('button.nuclen-quiz-answer-button')) return;\r\n\t\thandler(el);\r\n\t};\r\n\tconst keyListener = (e: KeyboardEvent) => {\r\n\t\tconst el = e.target as HTMLElement;\r\n\t\tif (!el.matches('button.nuclen-quiz-answer-button')) return;\r\n\t\tif (e.key === 'Enter' || e.key === ' ') {\r\n\t\t\te.preventDefault();\r\n\t\t\thandler(el);\r\n\t\t}\r\n\t};\r\n\r\n\taContainer.addEventListener('click', clickListener);\r\n\taContainer.addEventListener('keydown', keyListener);\r\n}\r\n","// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-main.ts\r\n// FULL content – fixes: enable flag, skip-link, next-button hiding\r\n// -----------------------------------------------------------------------------\r\n//\r\n// · Opt-in form now renders ONLY when Enable Opt-In is “on”.\r\n// · Skip link appears when opt-in is before-results & not mandatory.\r\n// · “Next” button is hidden whenever the opt-in is visible (both flows).\r\n//\r\n// -----------------------------------------------------------------------------\r\n\r\nimport type {\r\n\tQuizQuestion,\r\n\tOptinContext,\r\n\tNuclenSettings as NuclenSettingsType,\r\n} from './nuclen-quiz-types';\r\nimport { escapeHtml } from './nuclen-quiz-utils';\r\nimport type { QuizUIRefs, QuizState } from './nuclen-quiz-results';\r\nimport * as logger from './logger';\r\nimport { renderQuestion } from './nuclen-quiz-question';\r\n\r\n/* Globals injected by wp_localize_script */\r\ndeclare const postQuizData: QuizQuestion[];\r\ndeclare const NuclenSettings: NuclenSettingsType;\r\n\r\ndeclare const NuclenOptinAjax: { url: string; nonce: string };\r\n\r\n\tdeclare function gtag(...args: unknown[]): void;\r\n\r\n/* ─────────────────────────────────────────────────────────────\r\n\t Entry\r\n\t────────────────────────────────────────────────────────────── */\r\nexport function initQuiz(): void {\r\n\t/* DOM refs (fail-fast if markup missing) */\r\n\tconst quizContainer  = document.getElementById('nuclen-quiz-container');\r\n\tconst qContainer     = document.getElementById('nuclen-quiz-question-container');\r\n\tconst aContainer     = document.getElementById('nuclen-quiz-answers-container');\r\n\tconst progBar        = document.getElementById('nuclen-quiz-progress-bar');\r\n\tconst finalContainer = document.getElementById('nuclen-quiz-final-result-container');\r\n\tconst nextBtn        = document.getElementById('nuclen-quiz-next-button');\r\n\tconst explContainer  = document.getElementById('nuclen-quiz-explanation-container');\r\n\tif (\r\n\t\t!quizContainer || !qContainer || !aContainer || !progBar ||\r\n\t\t!finalContainer || !nextBtn || !explContainer\r\n\t) {\r\n\t\tlogger.warn('[NE] Quiz markup missing — init aborted.');\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* SETTINGS & OPT-IN CONTEXT */\r\n\tconst maxQuestions = NuclenSettings?.questions_per_quiz ?? 10;\r\n\tconst maxAnswers   = NuclenSettings?.answers_per_question ?? 4;\r\n\r\n\tconst optin: OptinContext = {\r\n\t\tposition: (window.NuclenOptinPosition as 'with_results' | 'before_results') ?? 'with_results',\r\n\t\tmandatory: Boolean(window.NuclenOptinMandatory),\r\n\t\tpromptText: window.NuclenOptinPromptText ?? '',\r\n\t\tsubmitLabel: window.NuclenOptinButtonText ?? '',\r\n\t\tenabled: Boolean(window.NuclenOptinEnabled),\r\n\t\twebhook: window.NuclenOptinWebhook ?? '',\r\n\t\tajaxUrl: NuclenOptinAjax?.url ?? '',\r\n\t\tajaxNonce: NuclenOptinAjax?.nonce ?? '',\r\n\t};\r\n\r\n\t/* PREPARE QUESTIONS */\r\n\t// Check if postQuizData exists and is an array\r\n\tif (typeof postQuizData === 'undefined' || !Array.isArray(postQuizData)) {\r\n\t\tlogger.warn('[NE] No quiz data available — quiz init aborted.');\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tconst questions: QuizQuestion[] = postQuizData\r\n\t\t.filter((q) => q.question.trim() && q.answers[0]?.trim())\r\n\t\t.slice(0, maxQuestions)\r\n\t\t.map((q) => ({ ...q, answers: q.answers.slice(0, maxAnswers) }));\r\n\r\n\tconst ui: QuizUIRefs = {\r\n\t\tqContainer: qContainer!,\r\n\t\taContainer: aContainer!,\r\n\t\texplContainer: explContainer!,\r\n\t\tnextBtn: nextBtn!,\r\n\t\tfinalContainer: finalContainer!,\r\n\t\tprogBar: progBar!,\r\n\t};\r\n\r\n\tconst state: QuizState = { currIdx: 0, score: 0, userAnswers: [] };\r\n\t\r\n\t// Store event listener reference for cleanup\r\n\tconst nextBtnClickHandler = showNext;\r\n\r\n\t/* Start */\r\n\tnextBtn.addEventListener('click', nextBtnClickHandler);\r\n\trenderQuestion(questions, state, ui, checkAnswer);\r\n\t\r\n\t// Cleanup function for page navigation\r\n\tconst cleanup = () => {\r\n\t\tnextBtn.removeEventListener('click', nextBtnClickHandler);\r\n\t\t// Clean up global functions\r\n\t\tif (window.nuclearEngagementShowQuizQuestionDetails) {\r\n\t\t\tdelete window.nuclearEngagementShowQuizQuestionDetails;\r\n\t\t}\r\n\t\tif (window.nuclearEngagementRetakeQuiz) {\r\n\t\t\tdelete window.nuclearEngagementRetakeQuiz;\r\n\t\t}\r\n\t};\r\n\t\r\n\t// Listen for page navigation to cleanup\r\n\tif ('onpagehide' in window) {\r\n\t\twindow.addEventListener('pagehide', cleanup);\r\n\t} else {\r\n\t\twindow.addEventListener('beforeunload', cleanup);\r\n\t}\r\n\r\n\r\n\t/* ───────────────────────────────────────────────────────────\r\n\t\t Quiz flow helpers\r\n\t─────────────────────────────────────────────────────────── */\r\n\r\n\tfunction checkAnswer(origIdx: number, shuffledIdx: number, correctIdx: number): void {\r\n\t\tif (origIdx === 0) state.score++;\r\n\t\tstate.userAnswers.push(origIdx);\r\n\r\n\t\tconst btns = aContainer!.getElementsByTagName('button');\r\n\t\tfor (let i = 0; i < btns.length; i++) {\r\n\t\t\tbtns[i].classList.remove('nuclen-quiz-possible-answer');\r\n\t\t\tif (i === correctIdx) {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-correct', 'nuclen-quiz-pulse');\r\n\t\t\t} else if (i === shuffledIdx) {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-wrong');\r\n\t\t\t} else {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-not-selected');\r\n\t\t\t}\r\n\t\t\tbtns[i].disabled = true;\r\n\t\t}\r\n\r\n\t\texplContainer!.innerHTML = `<p>${escapeHtml(\r\n\t\t\tquestions[state.currIdx].explanation,\r\n\t\t)}</p>`;\r\n\t\texplContainer!.classList.remove('nuclen-quiz-hidden');\r\n\t\tnextBtn!.classList.remove('nuclen-quiz-hidden');\r\n\r\n\t\tif (typeof gtag === 'function') {\r\n\t\t\tif (state.currIdx === 0) gtag('event', 'nuclen_quiz_start');\r\n\t\t\tgtag('event', 'nuclen_quiz_answer');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showNext(): void {\r\n\t\tstate.currIdx++;\r\n\t\tif (state.currIdx < questions.length) {\r\n\t\t\trenderQuestion(questions, state, ui, checkAnswer);\r\n\t\t\treturn quizContainer!.scrollIntoView();\r\n\t\t}\r\n\r\n\t\tconst finalCb = async () => {\r\n\t\t\tconst { renderFinal } = await import('./nuclen-quiz-results');\r\n\t\t\trenderFinal(ui, optin, questions, state, () =>\r\n\t\t\t\trenderQuestion(questions, state, ui, checkAnswer),\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\tif (optin.enabled && optin.position === 'before_results') {\r\n\t\t\timport('./nuclen-quiz-results').then(({ renderOptinBeforeResultsFlow }) => {\r\n\t\t\t\trenderOptinBeforeResultsFlow(ui, optin, finalCb);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfinalCb();\r\n\t}\r\n\r\n}\r\n"],"file":"front/js/nuclen-nuclen-quiz-main-BZ17qBEo.js"}