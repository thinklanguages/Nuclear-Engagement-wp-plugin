{"version":3,"file":"nuclen-front.js","sources":["../../../src/front/ts/nuclen-front-lazy.ts","../../../src/front/ts/nuclen-quiz-utils.ts","../../../src/front/ts/nuclen-quiz-optin.ts","../../../src/front/ts/nuclen-quiz-results.ts","../../../src/front/ts/nuclen-quiz-progress.ts","../../../src/front/ts/nuclen-quiz-question.ts","../../../src/front/ts/nuclen-quiz-main.ts","../../../src/front/ts/nuclen-front-quiz.ts"],"sourcesContent":["// nuclen-front-lazy.ts\r\n\r\n/*************************************************\r\n* 2) Lazy-Load + GA Intersection Observers\r\n*\r\n* Using IntersectionObserver delays expensive quiz\r\n* initialization until the component scrolls into view.\r\n* This minimizes network requests on initial page load.\r\n*************************************************/\r\n\r\n/**\r\n * 2a) Lazy-load container. Observes 'containerId' and triggers `initFunctionName` once visible.\r\n */\r\nwindow.NuclenLazyLoadComponent = function (\r\n\tcontainerId: string,\r\n\tinitFunctionName: string | null = null,\r\n) {\r\n\tconst component = document.getElementById(containerId);\r\n\tif (!component) return;\r\n\r\n\tconst observer = new IntersectionObserver(\r\n\t\t(entries) => {\r\n\t\t\tentries.forEach((entry) => {\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tconst win = window as unknown as Record<string, unknown>;\r\n\t\t\t\t\tif (initFunctionName && typeof win[initFunctionName] === 'function') {\r\n\t\t\t\t\t\t(win[initFunctionName] as () => void)();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobserver.disconnect();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{\r\n\t\t\trootMargin: '0px 0px -200px 0px',\r\n\t\t\tthreshold: 0.1\r\n\t\t}\r\n\t);\r\n\r\n\tobserver.observe(component);\r\n};\r\n\r\n/**\r\n\t * 2b) Fire a GA event when a specific element is fully in view (threshold=1.0).\r\n\t */\r\nfunction nuclenInitIntersectionObserver(selector: string, gtagEventName: string) {\r\n\tconst target = document.querySelector(selector);\r\n\tif (!target) return;\r\n\r\n\tconst observer = new IntersectionObserver(\r\n\t\t(entries, obs) => {\r\n\t\t\tentries.forEach((entry) => {\r\n\t\t\t// intersectionRatio === 1 means the element is fully in view\r\n\t\t\t\tif (entry.isIntersecting && entry.intersectionRatio === 1) {\r\n\t\t\t\t\tif (typeof gtag === 'function') {\r\n\t\t\t\t\t\tgtag('event', gtagEventName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Stop observing after first event\r\n\t\t\t\t\tobs.unobserve(entry.target);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t{\r\n\t\t\troot: null,\r\n\t\t\trootMargin: '0px',\r\n\t\t\tthreshold: 1.0 // require 100% of the element to be visible\r\n\t\t}\r\n\t);\r\n\r\n\tobserver.observe(target);\r\n}\r\n\r\n/**\r\n\t * 2c) Wait for #nuclen-quiz-container and #nuclen-summary-container in DOM, then attach GA observers.\r\n\t */\r\nconst mutationObs = new MutationObserver((_mutations, obs) => {\r\n\tconst quizEl = document.getElementById('nuclen-quiz-container');\r\n\tconst summaryEl = document.getElementById('nuclen-summary-container');\r\n\tif (quizEl && summaryEl) {\r\n\t\tnuclenInitIntersectionObserver('#nuclen-summary-container', 'nuclen_summary_view');\r\n\t\tnuclenInitIntersectionObserver('#nuclen-quiz-container', 'nuclen_quiz_view');\r\n\t\tobs.disconnect(); // stop once attached\r\n\t}\r\n});\r\nmutationObs.observe(document.body, { childList: true, subtree: true });\r\n\r\n/**\r\n\t * 2d) Immediately call lazy-loading for the quiz container, telling it to run nuclearEngagementInitQuiz() once in view.\r\n\t */\r\nwindow.NuclenLazyLoadComponent('nuclen-quiz-container', 'nuclearEngagementInitQuiz');\r\n","// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-utils.ts\r\n// -----------------------------------------------------------------------------\r\nimport type { OptinContext } from './nuclen-quiz-types';\r\nimport * as logger from './logger';\r\n\r\nexport function shuffle<T>(arr: T[]): T[] {\r\n\tconst a = [...arr];\r\n\tfor (let i = a.length - 1; i > 0; i--) {\r\n\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t[a[i], a[j]] = [a[j], a[i]];\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nexport const isValidEmail = (email: string): boolean => /.+@.+\\..+/.test(email);\r\n\r\nexport const escapeHtml = (str: string): string =>\r\n\tstr.replace(/[&<>\"']/g, (c) =>\r\n\t\t({ '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;' }[c] || c),\r\n\t);\r\n\r\nexport const storeOptinLocally = async (\r\n\tname: string,\r\n\temail: string,\r\n\turl: string,\r\n\tctx: OptinContext\r\n): Promise<void> => {\r\n\tif (!ctx.ajaxUrl || !ctx.ajaxNonce) return;\r\n\ttry {\r\n\t\tconst res = await fetch(ctx.ajaxUrl, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n\t\t\tbody: new URLSearchParams({\r\n\t\t\t\taction: 'nuclen_save_optin',\r\n\t\t\t\tnonce: ctx.ajaxNonce,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\turl,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tif (!res.ok) {\r\n\t\t\tlogger.error('[NE] Local opt-in failed', res.status);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tlogger.error('[NE] Local opt-in network error', err);\r\n\t}\r\n};\r\n\r\nexport const submitToWebhook = async (\r\n\tname: string,\r\n\temail: string,\r\n\tctx: OptinContext\r\n): Promise<void> => {\r\n\tif (!ctx.webhook) return;\r\n\ttry {\r\n\t\tconst res = await fetch(ctx.webhook, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ name, email }),\r\n\t\t});\r\n\t\tif (!res.ok) {\r\n\t\t\tlogger.error('[NE] Webhook responded with', res.status);\r\n\t\t\tthrow new Error(String(res.status));\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tlogger.error('[NE] Webhook request error', err);\r\n\t\tthrow err;\r\n\t}\r\n};\r\n","\r\n// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-optin.ts\r\n// -----------------------------------------------------------------------------\r\nimport type { OptinContext } from './nuclen-quiz-types';\r\nimport { isValidEmail, storeOptinLocally, submitToWebhook } from './nuclen-quiz-utils';\r\n\r\nexport const buildOptinInlineHTML = (ctx: OptinContext): string => `\r\n\t<div id=\"nuclen-optin-container\" class=\"nuclen-optin-with-results\">\r\n\t<p class=\"nuclen-fg\"><strong>${ctx.promptText}</strong></p>\r\n\t<label for=\"nuclen-optin-name\"  class=\"nuclen-fg\">Name</label>\r\n\t<input  type=\"text\"  id=\"nuclen-optin-name\">\r\n\t<label for=\"nuclen-optin-email\" class=\"nuclen-fg\">Email</label>\r\n\t<input  type=\"email\" id=\"nuclen-optin-email\" required>\r\n\t<button type=\"button\" id=\"nuclen-optin-submit\">${ctx.submitLabel}</button>\r\n\t</div>`;\r\n\r\nexport function mountOptinBeforeResults(\r\n\tcontainer: HTMLElement,\r\n\tctx: OptinContext,\r\n\tonComplete: () => void,\r\n\tonSkip: () => void\r\n): void {\r\n\tcontainer.innerHTML = `\r\n\t<div id=\"nuclen-optin-container\">\r\n\t\t<p class=\"nuclen-fg\"><strong>${ctx.promptText}</strong></p>\r\n\t\t<label for=\"nuclen-optin-name\"  class=\"nuclen-fg\">Name</label>\r\n\t\t<input  type=\"text\"  id=\"nuclen-optin-name\">\r\n\t\t<label for=\"nuclen-optin-email\" class=\"nuclen-fg\">Email *</label>\r\n\t\t<input  type=\"email\" id=\"nuclen-optin-email\" required>\r\n\t\t<div class=\"nuclen-optin-btn-row\">\r\n\t\t<button type=\"button\" id=\"nuclen-optin-submit\">${ctx.submitLabel}</button>\r\n\t\t</div>\r\n\t\t${\r\n\tctx.mandatory\r\n\t\t? ''\r\n\t\t: '<div class=\"nuclen-optin-skip\"><a href=\"#\" id=\"nuclen-optin-skip\">Skip &amp; view results</a></div>'\r\n}\r\n\t</div>`;\r\n\r\n\tdocument.getElementById('nuclen-optin-submit')?.addEventListener('click', async () => {\r\n\t\tconst name  = (document.getElementById('nuclen-optin-name')  as HTMLInputElement).value.trim();\r\n\t\tconst email = (document.getElementById('nuclen-optin-email') as HTMLInputElement).value.trim();\r\n\t\tif (!isValidEmail(email)) return alert('Please enter a valid email');\r\n\t\tawait storeOptinLocally(name, email, window.location.href, ctx);\r\n\t\ttry {\r\n\t\t\tawait submitToWebhook(name, email, ctx);\r\n\t\t\tonComplete();\r\n\t\t} catch {\r\n\t\t\talert('Network error – please try again later.');\r\n\t\t}\r\n\t});\r\n\r\n\tdocument.getElementById('nuclen-optin-skip')?.addEventListener('click', (e) => {\r\n\t\te.preventDefault();\r\n\t\tonSkip();\r\n\t});\r\n}\r\n\r\nexport function attachInlineOptinHandlers(ctx: OptinContext): void {\r\n\tdocument.getElementById('nuclen-optin-submit')?.addEventListener('click', async () => {\r\n\t\tconst name  = (document.getElementById('nuclen-optin-name')  as HTMLInputElement).value.trim();\r\n\t\tconst email = (document.getElementById('nuclen-optin-email') as HTMLInputElement).value.trim();\r\n\t\tif (!isValidEmail(email)) return alert('Please enter a valid email');\r\n\t\tawait storeOptinLocally(name, email, window.location.href, ctx);\r\n\t\ttry {\r\n\t\t\tawait submitToWebhook(name, email, ctx);\r\n\t\t} catch {\r\n\t\t\talert('Unable to submit. Please try later.');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n","// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-results.ts\r\n// -----------------------------------------------------------------------------\r\nimport type { QuizQuestion, OptinContext } from './nuclen-quiz-types';\r\nimport {\r\n\tbuildOptinInlineHTML,\r\n\tmountOptinBeforeResults,\r\n\tattachInlineOptinHandlers,\r\n} from './nuclen-quiz-optin';\r\nimport { escapeHtml } from './nuclen-quiz-utils';\r\n\r\n// Globals injected by wp_localize_script\r\ndeclare const NuclenStrings: {\r\n\tretake_test: string;\r\n\tyour_score: string;\r\n\tperfect: string;\r\n\twell_done: string;\r\n\tretake_prompt: string;\r\n\tcorrect: string;\r\n\tyour_answer: string;\r\n};\r\n\r\ndeclare function gtag(...args: unknown[]): void;\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\tnuclearEngagementShowQuizQuestionDetails?: (idx: number) => void;\r\n\tnuclearEngagementRetakeQuiz?: () => void;\r\n\t}\r\n}\r\n\r\nexport interface QuizUIRefs {\r\n\tqContainer: HTMLElement;\r\n\taContainer: HTMLElement;\r\n\texplContainer: HTMLElement;\r\n\tnextBtn: HTMLElement;\r\n\tfinalContainer: HTMLElement;\r\n\tprogBar: HTMLElement;\r\n}\r\n\r\nexport interface QuizState {\r\n        currIdx: number;\r\n        score: number;\r\n        userAnswers: number[];\r\n}\r\n\r\nfunction buildResultsHtml(\r\n\toptin: OptinContext,\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n): string {\r\n\tlet html = '';\r\n\tif (optin.enabled && optin.position === 'with_results') {\r\n\t\thtml += buildOptinInlineHTML(optin);\r\n\t}\r\n\r\n\thtml += `\r\n<div id=\"nuclen-quiz-results-title\" class=\"nuclen-fg\">${NuclenStrings.your_score}</div>\r\n<div id=\"nuclen-quiz-results-score\" class=\"nuclen-fg\" aria-live=\"polite\" aria-atomic=\"true\">\r\n${state.score} / ${questions.length}\r\n</div>`;\r\n\tconst comment =\r\n\t\tstate.score === questions.length\r\n\t\t\t? NuclenStrings.perfect\r\n\t\t\t: state.score > questions.length / 2\r\n\t\t\t\t? NuclenStrings.well_done\r\n\t\t\t\t: NuclenStrings.retake_prompt;\r\n\thtml += `<div id=\"nuclen-quiz-score-comment\" aria-live=\"polite\">${comment}</div>`;\r\n\r\n\thtml += '<div id=\"nuclen-quiz-result-tabs-container\">';\r\n\tquestions.forEach((_, i) => {\r\n\t\thtml += `\r\n<button class=\"nuclen-quiz-result-tab\" onclick=\"nuclearEngagementShowQuizQuestionDetails(${i})\">${i + 1}</button>`;\r\n\t});\r\n\thtml += '</div><div id=\"nuclen-quiz-result-details-container\" class=\"nuclen-fg dashboard-box\"></div>';\r\n\r\n\tif (window.NuclenCustomQuizHtmlAfter?.trim()) {\r\n\t\thtml += `\r\n<div id=\"nuclen-quiz-end-message\" class=\"nuclen-fg\">\r\n${window.NuclenCustomQuizHtmlAfter}\r\n</div>`;\r\n\t}\r\n\r\n\thtml += `\r\n<button id=\"nuclen-quiz-retake-button\" onclick=\"nuclearEngagementRetakeQuiz()\">${NuclenStrings.retake_test}</button>`;\r\n\r\n\treturn html;\r\n}\r\n\r\nfunction registerShowDetailsHandler(\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n): void {\r\n\twindow.nuclearEngagementShowQuizQuestionDetails = (idx: number): void => {\r\n\t\tconst q = questions[idx];\r\n\t\tconst ua = state.userAnswers[idx];\r\n\t\t(document.getElementById('nuclen-quiz-result-details-container') as HTMLElement).innerHTML = `\r\n<p class=\"nuclen-quiz-detail-question\">${escapeHtml(q.question)}</p>\r\n<p class=\"nuclen-quiz-detail-correct\"><strong>${NuclenStrings.correct}</strong> ${escapeHtml(q.answers[0])}</p>\r\n${\r\n\tua === 0\r\n\t\t? `<p class=\"nuclen-quiz-detail-chosen\"><strong>${NuclenStrings.your_answer}</strong> ${escapeHtml(q.answers[0])} <span class=\"nuclen-quiz-checkmark\">✔️</span></p>`\r\n\t\t: `<p class=\"nuclen-quiz-detail-chosen\"><strong>${NuclenStrings.your_answer}</strong> ${escapeHtml(q.answers[ua] ?? '[No data]')}</p>`\r\n}\r\n<p class=\"nuclen-quiz-detail-explanation\">${escapeHtml(q.explanation)}</p>`;\r\n\t\tArray.from(document.getElementsByClassName('nuclen-quiz-result-tab')).forEach((el) =>\r\n\t\t\tel.classList.remove('nuclen-quiz-result-active-tab'),\r\n\t\t);\r\n\t\tdocument\r\n\t\t\t.getElementsByClassName('nuclen-quiz-result-tab')[idx]?.classList.add(\r\n\t\t\t\t'nuclen-quiz-result-active-tab',\r\n\t\t\t);\r\n\t};\r\n\twindow.nuclearEngagementShowQuizQuestionDetails(0);\r\n}\r\n\r\nfunction registerRetakeHandler(\r\n\tstate: QuizState,\r\n\tfinalContainer: HTMLElement,\r\n\tprogBar: HTMLElement,\r\n\tquestionCount: number,\r\n\trenderQuestion: () => void,\r\n): void {\r\n\twindow.nuclearEngagementRetakeQuiz = (): void => {\r\n\t\tstate.currIdx = 0;\r\n\t\tstate.score = 0;\r\n\t\tstate.userAnswers.length = 0;\r\n\t\tfinalContainer.innerHTML = '';\r\n\t\tfinalContainer.classList.add('nuclen-quiz-hidden');\r\n\t\tprogBar.style.width = `${(1 / questionCount) * 100}%`;\r\n\t\trenderQuestion();\r\n\t};\r\n}\r\n\r\nexport function renderOptinBeforeResultsFlow(\r\n\tui: QuizUIRefs,\r\n\toptin: OptinContext,\r\n\tonFinal: () => void,\r\n): void {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, finalContainer } = ui;\r\n\tqContainer.innerHTML = '';\r\n\taContainer.innerHTML = '';\r\n\texplContainer.innerHTML = '';\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\r\n\tmountOptinBeforeResults(finalContainer, optin, onFinal, onFinal);\r\n}\r\n\r\nexport function renderFinal(\r\n\tui: QuizUIRefs,\r\n\toptin: OptinContext,\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n\trenderQuestion: () => void,\r\n): void {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, finalContainer, progBar } = ui;\r\n\tqContainer.innerHTML = '';\r\n\taContainer.innerHTML = '';\r\n\texplContainer.innerHTML = '';\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\tfinalContainer.classList.remove('nuclen-quiz-hidden');\r\n\tfinalContainer.innerHTML = buildResultsHtml(optin, questions, state);\r\n\tfinalContainer.setAttribute('aria-live', 'polite');\r\n\r\n\tif (optin.enabled && optin.position === 'with_results') {\r\n\t\tattachInlineOptinHandlers(optin);\r\n\t}\r\n\r\n\tregisterShowDetailsHandler(questions, state);\r\n\tregisterRetakeHandler(state, finalContainer, progBar, questions.length, renderQuestion);\r\n\r\n\tif (typeof gtag === 'function') {\r\n\t\tgtag('event', 'nuclen_quiz_end');\r\n\t}\r\n}\r\n","// src/front/ts/nuclen-quiz-progress.ts\r\n\r\nexport function updateProgress(\r\n\tprogBar: HTMLElement,\r\n\tcurrIdx: number,\r\n\ttotal: number,\r\n): void {\r\n\tprogBar.style.width = `${((currIdx + 1) / total) * 100}%`;\r\n}\r\n","// src/front/ts/nuclen-quiz-question.ts\r\n\r\nimport type { QuizQuestion } from './nuclen-quiz-types';\r\nimport { shuffle, escapeHtml } from './nuclen-quiz-utils';\r\nimport type { QuizUIRefs, QuizState } from './nuclen-quiz-results';\r\nimport { updateProgress } from './nuclen-quiz-progress';\r\n\r\nexport function renderQuestion(\r\n\tquestions: QuizQuestion[],\r\n\tstate: QuizState,\r\n\tui: QuizUIRefs,\r\n\tcheckAnswer: (origIdx: number, shuffledIdx: number, correctIdx: number) => void,\r\n): void {\r\n\tconst { qContainer, aContainer, explContainer, nextBtn, progBar } = ui;\r\n\tconst q = questions[state.currIdx];\r\n\r\n\tqContainer.innerHTML = `\r\n\t<div id=\"nuclen-quiz-question-number\" aria-live=\"polite\" aria-atomic=\"true\">\r\n\t\t${state.currIdx + 1}/${questions.length}\r\n\t</div>\r\n\t<div class=\"nuclen-quiz-title\" role=\"heading\" aria-level=\"2\">${escapeHtml(q.question)}</div>`;\r\n\r\n\tconst shuffled = shuffle(\r\n\t\tq.answers.map((ans, idx) => ({ ans, idx })).filter((a) => a.ans.trim()),\r\n\t);\r\n\r\n\taContainer.innerHTML = shuffled\r\n\t\t.map(\r\n\t\t\t(a, i) => `\r\n\t\t<button\r\n\t\t\tclass=\"nuclen-quiz-answer-button nuclen-quiz-possible-answer\"\r\n\t\t\tdata-orig-idx=\"${a.idx}\"\r\n\t\t\tdata-testid=\"quiz-answer\"\r\n\t\t\ttabindex=\"0\"\r\n\t\t\taria-label=\"Answer ${i + 1}: ${escapeHtml(a.ans)}\"\r\n\t\t>${escapeHtml(a.ans)}</button>`,\r\n\t\t)\r\n\t\t.join('');\r\n\r\n\tconst correctIdx = shuffled.findIndex((a) => a.idx === 0);\r\n\r\n\t/* reset */\r\n\texplContainer.innerHTML = '';\r\n\texplContainer.classList.add('nuclen-quiz-hidden');\r\n\tnextBtn.classList.add('nuclen-quiz-hidden');\r\n\tupdateProgress(progBar, state.currIdx, questions.length);\r\n\r\n\t/* one-shot answer handler */\r\n\tconst handler = (el: HTMLElement) => {\r\n\t\tconst origIdx = parseInt(el.getAttribute('data-orig-idx') || '0', 10);\r\n\t\tcheckAnswer(origIdx, shuffled.findIndex((a) => a.idx === origIdx), correctIdx);\r\n\t\taContainer.removeEventListener('click', clickListener);\r\n\t\taContainer.removeEventListener('keydown', keyListener);\r\n\t};\r\n\r\n\tconst clickListener = (e: Event) => {\r\n\t\tconst el = e.target as HTMLElement;\r\n\t\tif (!el.matches('button.nuclen-quiz-answer-button')) return;\r\n\t\thandler(el);\r\n\t};\r\n\tconst keyListener = (e: KeyboardEvent) => {\r\n\t\tconst el = e.target as HTMLElement;\r\n\t\tif (!el.matches('button.nuclen-quiz-answer-button')) return;\r\n\t\tif (e.key === 'Enter' || e.key === ' ') {\r\n\t\t\te.preventDefault();\r\n\t\t\thandler(el);\r\n\t\t}\r\n\t};\r\n\r\n\taContainer.addEventListener('click', clickListener);\r\n\taContainer.addEventListener('keydown', keyListener);\r\n}\r\n","// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-quiz-main.ts\r\n// FULL content – fixes: enable flag, skip-link, next-button hiding\r\n// -----------------------------------------------------------------------------\r\n//\r\n// · Opt-in form now renders ONLY when Enable Opt-In is “on”.\r\n// · Skip link appears when opt-in is before-results & not mandatory.\r\n// · “Next” button is hidden whenever the opt-in is visible (both flows).\r\n//\r\n// -----------------------------------------------------------------------------\r\n\r\nimport type {\r\n\tQuizQuestion,\r\n\tOptinContext,\r\n\tNuclenSettings as NuclenSettingsType,\r\n} from './nuclen-quiz-types';\r\nimport { escapeHtml } from './nuclen-quiz-utils';\r\nimport {\r\n\tQuizUIRefs,\r\n\tQuizState,\r\n\trenderFinal,\r\n\trenderOptinBeforeResultsFlow,\r\n} from './nuclen-quiz-results';\r\nimport * as logger from './logger';\r\nimport { renderQuestion } from './nuclen-quiz-question';\r\n\r\n/* Globals injected by wp_localize_script */\r\ndeclare const postQuizData: QuizQuestion[];\r\ndeclare const NuclenSettings: NuclenSettingsType;\r\n\r\ndeclare const NuclenOptinAjax: { url: string; nonce: string };\r\n\r\n\tdeclare function gtag(...args: unknown[]): void;\r\n\r\n/* ─────────────────────────────────────────────────────────────\r\n\t Entry\r\n\t────────────────────────────────────────────────────────────── */\r\nexport function initQuiz(): void {\r\n\t/* DOM refs (fail-fast if markup missing) */\r\n\tconst quizContainer  = document.getElementById('nuclen-quiz-container');\r\n\tconst qContainer     = document.getElementById('nuclen-quiz-question-container');\r\n\tconst aContainer     = document.getElementById('nuclen-quiz-answers-container');\r\n\tconst progBar        = document.getElementById('nuclen-quiz-progress-bar');\r\n\tconst finalContainer = document.getElementById('nuclen-quiz-final-result-container');\r\n\tconst nextBtn        = document.getElementById('nuclen-quiz-next-button');\r\n\tconst explContainer  = document.getElementById('nuclen-quiz-explanation-container');\r\n\tif (\r\n\t\t!quizContainer || !qContainer || !aContainer || !progBar ||\r\n\t\t!finalContainer || !nextBtn || !explContainer\r\n\t) {\r\n\t\tlogger.warn('[NE] Quiz markup missing — init aborted.');\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* SETTINGS & OPT-IN CONTEXT */\r\n\tconst maxQuestions = NuclenSettings?.questions_per_quiz ?? 10;\r\n\tconst maxAnswers   = NuclenSettings?.answers_per_question ?? 4;\r\n\r\n\tconst optin: OptinContext = {\r\n\t\tposition: (window.NuclenOptinPosition as 'with_results' | 'before_results') ?? 'with_results',\r\n\t\tmandatory: Boolean(window.NuclenOptinMandatory),\r\n\t\tpromptText: window.NuclenOptinPromptText ?? '',\r\n\t\tsubmitLabel: window.NuclenOptinButtonText ?? '',\r\n\t\tenabled: Boolean(window.NuclenOptinEnabled),\r\n\t\twebhook: window.NuclenOptinWebhook ?? '',\r\n\t\tajaxUrl: NuclenOptinAjax?.url ?? '',\r\n\t\tajaxNonce: NuclenOptinAjax?.nonce ?? '',\r\n\t};\r\n\r\n\t/* PREPARE QUESTIONS */\r\n\tconst questions: QuizQuestion[] = postQuizData\r\n\t\t.filter((q) => q.question.trim() && q.answers[0]?.trim())\r\n\t\t.slice(0, maxQuestions)\r\n\t\t.map((q) => ({ ...q, answers: q.answers.slice(0, maxAnswers) }));\r\n\r\n\tconst ui: QuizUIRefs = {\r\n\t\tqContainer: qContainer!,\r\n\t\taContainer: aContainer!,\r\n\t\texplContainer: explContainer!,\r\n\t\tnextBtn: nextBtn!,\r\n\t\tfinalContainer: finalContainer!,\r\n\t\tprogBar: progBar!,\r\n\t};\r\n\r\n\tconst state: QuizState = { currIdx: 0, score: 0, userAnswers: [] };\r\n\r\n\t/* Start */\r\n\tnextBtn.addEventListener('click', showNext);\r\n\trenderQuestion(questions, state, ui, checkAnswer);\r\n\r\n\r\n\t/* ───────────────────────────────────────────────────────────\r\n\t\t Quiz flow helpers\r\n\t─────────────────────────────────────────────────────────── */\r\n\r\n\tfunction checkAnswer(origIdx: number, shuffledIdx: number, correctIdx: number): void {\r\n\t\tif (origIdx === 0) state.score++;\r\n\t\tstate.userAnswers.push(origIdx);\r\n\r\n\t\tconst btns = aContainer!.getElementsByTagName('button');\r\n\t\tfor (let i = 0; i < btns.length; i++) {\r\n\t\t\tbtns[i].classList.remove('nuclen-quiz-possible-answer');\r\n\t\t\tif (i === correctIdx) {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-correct', 'nuclen-quiz-pulse');\r\n\t\t\t} else if (i === shuffledIdx) {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-wrong');\r\n\t\t\t} else {\r\n\t\t\t\tbtns[i].classList.add('nuclen-quiz-answer-not-selected');\r\n\t\t\t}\r\n\t\t\tbtns[i].disabled = true;\r\n\t\t}\r\n\r\n\t\texplContainer!.innerHTML = `<p>${escapeHtml(\r\n\t\t\tquestions[state.currIdx].explanation,\r\n\t\t)}</p>`;\r\n\t\texplContainer!.classList.remove('nuclen-quiz-hidden');\r\n\t\tnextBtn!.classList.remove('nuclen-quiz-hidden');\r\n\r\n\t\tif (typeof gtag === 'function') {\r\n\t\t\tif (state.currIdx === 0) gtag('event', 'nuclen_quiz_start');\r\n\t\t\tgtag('event', 'nuclen_quiz_answer');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction showNext(): void {\r\n\t\tstate.currIdx++;\r\n\t\tif (state.currIdx < questions.length) {\r\n\t\t\trenderQuestion(questions, state, ui, checkAnswer);\r\n\t\t\treturn quizContainer!.scrollIntoView();\r\n\t\t}\r\n\r\n\t\tconst finalCb = () =>\r\n\t\t\trenderFinal(ui, optin, questions, state, () =>\r\n\t\t\t\trenderQuestion(questions, state, ui, checkAnswer),\r\n\t\t\t);\r\n\r\n\t\tif (optin.enabled && optin.position === 'before_results') {\r\n\t\t\treturn renderOptinBeforeResultsFlow(ui, optin, finalCb);\r\n\t\t}\r\n\t\tfinalCb();\r\n\t}\r\n\r\n}\r\n","\r\n// ─────────────────────────────────────────────────────────────\r\n// File: src/front/ts/nuclen-front-quiz.ts  (entry point)\r\n// -----------------------------------------------------------------------------\r\nimport { initQuiz } from './nuclen-quiz-main';\r\n\r\n/* Expose for lazy loader / global inline calls */\r\nwindow.nuclearEngagementInitQuiz = initQuiz;\r\n"],"names":["containerId","initFunctionName","component","observer","entries","entry","win","nuclenInitIntersectionObserver","selector","gtagEventName","target","obs","mutationObs","_mutations","quizEl","summaryEl","shuffle","arr","a","i","j","isValidEmail","email","escapeHtml","str","c","storeOptinLocally","name","url","ctx","res","logger.error","err","submitToWebhook","buildOptinInlineHTML","mountOptinBeforeResults","container","onComplete","onSkip","_a","_b","e","attachInlineOptinHandlers","buildResultsHtml","optin","questions","state","html","comment","_","registerShowDetailsHandler","idx","q","ua","el","registerRetakeHandler","finalContainer","progBar","questionCount","renderQuestion","renderOptinBeforeResultsFlow","ui","onFinal","qContainer","aContainer","explContainer","nextBtn","renderFinal","updateProgress","currIdx","total","checkAnswer","shuffled","ans","correctIdx","handler","origIdx","clickListener","keyListener","initQuiz","quizContainer","maxQuestions","maxAnswers","showNext","shuffledIdx","btns","finalCb"],"mappings":"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"}