{"version":3,"file":"nuclen-admin.js","sources":["../../../src/shared/constants.ts","../../../src/admin/ts/generation/api.ts","../../../src/admin/ts/generation/polling.ts","../../../src/admin/ts/utils/displayError.ts","../../../src/admin/ts/generation/results.ts","../../../src/admin/ts/single/single-generation-utils.ts","../../../src/admin/ts/single/single-generation-handlers.ts","../../../src/admin/ts/nuclen-admin-single-generation.ts","../../../src/admin/ts/generate/elements.ts","../../../src/admin/ts/generate/generate-page-utils.ts","../../../src/admin/ts/generate/filters.ts","../../../src/admin/ts/generate/step1.ts","../../../src/admin/ts/utils/displaySuccess.ts","../../../src/admin/ts/generate/step2.ts","../../../src/admin/ts/generate/navigation.ts","../../../src/admin/ts/generate/generate-page-handlers.ts","../../../src/admin/ts/nuclen-admin-generate-page.ts","../../../src/admin/ts/nuclen-admin-ui.ts","../../../src/admin/ts/nuclen-admin-onboarding.ts","../../../src/admin/ts/blocks/nuclen-editor-blocks.ts"],"sourcesContent":["// API Configuration\r\nexport const API_CONFIG = {\r\n\tRETRY_COUNT: 3,\r\n\tINITIAL_DELAY_MS: 500,\r\n\tPOLLING_INTERVAL_MS: 10000,\r\n\tMAX_BACKOFF_MS: 30000,\r\n\t// Progressive polling configuration\r\n\tPOLLING_INTERVALS: [\r\n\t\t// First 1 minute: 10 second intervals (6 polls)\r\n\t\t{ duration: 60000, interval: 10000 },\r\n\t\t// Next 4 minutes: 30 second intervals (8 polls)\r\n\t\t{ duration: 240000, interval: 30000 },\r\n\t\t// Remaining time: 60 second intervals\r\n\t\t{ duration: Infinity, interval: 60000 }\r\n\t],\r\n\tMAX_POLLING_ATTEMPTS: 240, // Increased from 120\r\n\tMAX_POLLING_TIMEOUT_MS: 1800000, // 30 minutes\r\n} as const;\r\n\r\n// Action Names\r\nexport const ACTIONS = {\r\n\tTRIGGER_GENERATION: 'nuclen_trigger_generation',\r\n\tGET_POSTS_COUNT: 'nuclen_get_posts_count',\r\n\tUPDATE_POINTER: 'nuclen_update_pointer',\r\n\tEXPORT_OPTIN: 'nuclen_export_optin',\r\n} as const;\r\n\r\n// CSS Class Names\r\nexport const CSS_CLASSES = {\r\n\tADMIN: {\r\n\t\tCONTAINER: 'nuclen-admin-container',\r\n\t\tLOADING: 'nuclen-loading',\r\n\t\tERROR: 'nuclen-error',\r\n\t\tSUCCESS: 'nuclen-success',\r\n\t},\r\n\tQUIZ: {\r\n\t\tCONTAINER: 'nuclen-quiz-container',\r\n\t\tQUESTION: 'nuclen-quiz-question',\r\n\t\tANSWER: 'nuclen-quiz-answer',\r\n\t\tPROGRESS: 'nuclen-quiz-progress',\r\n\t},\r\n\tTOC: {\r\n\t\tCONTAINER: 'nuclen-toc-container',\r\n\t\tSTICKY: 'nuclen-toc-sticky',\r\n\t\tACTIVE: 'nuclen-toc-active',\r\n\t},\r\n} as const;\r\n\r\n// Scroll Configuration\r\nexport const SCROLL_CONFIG = {\r\n\tTOC_ROOT_MARGIN: '0px 0px -60%',\r\n\tSMOOTH_SCROLL_DURATION: 300,\r\n} as const;\r\n\r\n// Local Storage Keys\r\nexport const STORAGE_KEYS = {\r\n\tQUIZ_PROGRESS: 'nuclen_quiz_progress',\r\n\tUSER_PREFERENCES: 'nuclen_user_prefs',\r\n} as const;","import * as logger from '../utils/logger';\r\nimport { API_CONFIG } from '../../../shared/constants';\r\n\r\nexport interface NuclenFetchResult<T> {\r\n\tok: boolean;\r\n\tstatus: number;\r\n\tdata: T | null;\r\n\terror?: string;\r\n}\r\n\r\nexport async function nuclenFetchWithRetry<T = unknown>(\r\n\turl: string,\r\n\toptions: RequestInit,\r\n\tretries = API_CONFIG.RETRY_COUNT,\r\n\tinitialDelayMs = API_CONFIG.INITIAL_DELAY_MS,\r\n\ttimeoutMs = 30000 // 30 second default timeout\r\n): Promise<NuclenFetchResult<T>> {\r\n\tlet attempt = 0;\r\n\tlet delay: number = initialDelayMs;\r\n\tlet lastError: Error | undefined;\r\n\r\n\twhile (attempt <= retries) {\r\n\t\ttry {\r\n\t\t\t// Create AbortController for timeout\r\n\t\t\tconst controller = new window.AbortController();\r\n\t\t\tconst timeoutId = setTimeout(() => controller.abort(), timeoutMs);\r\n\t\t\t\r\n\t\t\tconst response = await fetch(url, {\r\n\t\t\t\t...options,\r\n\t\t\t\tsignal: controller.signal\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tclearTimeout(timeoutId);\r\n\t\t\tconst { status, ok } = response;\r\n\t\t\tconst bodyText = await response.text().catch(() => '');\r\n\t\t\tlet data: T | null = null;\r\n\t\t\tif (bodyText) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata = JSON.parse(bodyText) as T;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// body is not JSON\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ok) {\r\n\t\t\t\tconst success: NuclenFetchResult<T> = {\r\n\t\t\t\t\tok: true,\r\n\t\t\t\t\tstatus: status,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t};\r\n\t\t\t\treturn success;\r\n\t\t\t}\r\n\r\n\t\t\tconst fail: NuclenFetchResult<T> = {\r\n\t\t\t\tok: false,\r\n\t\t\t\tstatus: status,\r\n\t\t\t\tdata: data,\r\n\t\t\t\terror: bodyText,\r\n\t\t\t};\r\n\t\t\treturn fail;\r\n\t\t} catch (error: unknown) {\r\n\t\t\tlastError = error as Error;\r\n\t\t\t\r\n\t\t\t// Check if it's an abort error\r\n\t\t\tif (lastError.name === 'AbortError') {\r\n\t\t\t\tlastError = new Error(`Request timeout after ${timeoutMs}ms`);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (attempt === retries) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlogger.warn(\r\n\t\t\t\t`[RETRY] API request | URL: ${url} | Method: ${options.method || 'GET'} | Attempts left: ${retries - attempt} | Error: ${lastError.message}`\r\n\t\t\t);\r\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, delay));\r\n\t\t\tdelay = Math.min(delay * 2, API_CONFIG.MAX_BACKOFF_MS || 30000) as number;\r\n\t\t}\r\n\t\tattempt += 1;\r\n\t}\r\n\r\n\tlogger.error(\r\n\t\t`[ERROR] Max retries exhausted | URL: ${url} | Method: ${options.method || 'GET'} | Error: ${lastError?.message || 'Unknown error'}`\r\n\t);\r\n\tthrow lastError;\r\n}\r\n\r\nexport interface PollingUpdateData {\r\n\tprocessed: number;\r\n\ttotal: number;\r\n\tsuccessCount?: number;\r\n\tfailCount?: number;\r\n\tfinalReport?: { message?: string };\r\n\tresults?: Record<string, unknown>;\r\n\tworkflow: string;\r\n}\r\n\r\nexport interface PollingUpdateResponse {\r\n\tsuccess: boolean;\r\n\tmessage?: string;\r\n\tdata: PollingUpdateData;\r\n}\r\n\r\nexport interface StartGenerationResponse {\r\n\tsuccess: boolean;\r\n\tmessage?: string;\r\n\tgeneration_id?: string;\r\n\tdata?: {\r\n\t\tgeneration_id?: string;\r\n\t\tresults?: any[];\r\n\t\tsuccess?: boolean;\r\n\t\terror?: string;\r\n\t\terror_code?: string;\r\n\t\tstatus_code?: number;\r\n\t\tmessage?: string;\r\n\t\ttotal_posts?: number;\r\n\t\ttotal_batches?: number;\r\n\t\t[key: string]: unknown;\r\n\t};\r\n}\r\n\r\nexport async function nuclenFetchUpdates(\r\n\tgenerationId?: string\r\n): Promise<PollingUpdateResponse> {\r\n\tif (!window.nuclenAjax || !window.nuclenAjax.ajax_url || !window.nuclenAjax.fetch_action) {\r\n\t\tconst error = new Error('[ERROR] Missing configuration | Required: nuclenAjax.ajax_url and nuclenAjax.fetch_action');\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tconst formData = new FormData();\r\n\tformData.append('action', window.nuclenAjax.fetch_action);\r\n\r\n\tif (window.nuclenAjax.nonce) {\r\n\t\tformData.append('security', window.nuclenAjax.nonce);\r\n\t}\r\n\r\n\tif (generationId) {\r\n\t\tformData.append('generation_id', generationId);\r\n\t}\r\n\t\r\n\tconst result = await nuclenFetchWithRetry<PollingUpdateResponse>(\r\n\t\twindow.nuclenAjax.ajax_url,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t},\r\n\t\tAPI_CONFIG.RETRY_COUNT,\r\n\t\tAPI_CONFIG.INITIAL_DELAY_MS,\r\n\t\t30000 // 30 second timeout for polling\r\n\t);\r\n\r\n\tif (!result.ok) {\r\n\t\t// Check if the error message indicates polling limit reached\r\n\t\tconst errorMessage = result.error || 'Unknown error';\r\n\t\tif (errorMessage.includes('Polling failed after') && errorMessage.includes('attempts')) {\r\n\t\t\t// Return a special response structure for polling limit errors\r\n\t\t\t// Don't log this as an error since it's a normal flow\r\n\t\t\tlogger.warn(`[WARNING] API polling limit reached | GenID: ${generationId} | Message: ${errorMessage}`);\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: errorMessage,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprocessed: 0,\r\n\t\t\t\t\ttotal: 0,\r\n\t\t\t\t\tworkflow: 'unknown'\r\n\t\t\t\t}\r\n\t\t\t} as PollingUpdateResponse;\r\n\t\t}\r\n\t\t\r\n\t\tconst error = new Error(`[ERROR] Fetch updates failed | Status: ${result.status} | Error: ${errorMessage}`);\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tconst response = result.data as PollingUpdateResponse;\r\n\tlogger.log(`[DEBUG] nuclenFetchUpdates response | GenID: ${generationId} | Success: ${response.success} | Has data: ${!!response.data} | Has results: ${response.data?.results ? Object.keys(response.data.results).length : 0}`);\r\n\treturn response;\r\n}\r\n\r\nexport async function NuclenStartGeneration(\r\n\tdataToSend: Record<string, unknown>\r\n): Promise<StartGenerationResponse> {\r\n\tif (!window.nuclenAdminVars || !window.nuclenAdminVars.ajax_url) {\r\n\t\tconst error = new Error('[ERROR] Missing configuration | Required: nuclenAdminVars.ajax_url');\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\r\n\tconst formData = new FormData();\r\n\tformData.append('action', 'nuclen_trigger_generation');\r\n\tformData.append('payload', JSON.stringify(dataToSend));\r\n\tif (!window.nuclenAjax?.nonce) {\r\n\t\tconst error = new Error('[ERROR] Security check failed | Missing nonce');\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\tformData.append('security', window.nuclenAjax.nonce);\r\n\r\n\tconst result = await nuclenFetchWithRetry<StartGenerationResponse>(\r\n\t\twindow.nuclenAdminVars.ajax_url,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t},\r\n\t\tAPI_CONFIG.RETRY_COUNT,\r\n\t\tAPI_CONFIG.INITIAL_DELAY_MS,\r\n\t\t60000 // 60 second timeout for generation start\r\n\t);\r\n\r\n\tif (!result.ok) {\r\n\t\tconst error = new Error(`[ERROR] Generation start failed | Status: ${result.status} | Error: ${result.error || 'Unknown error'}`);\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\r\n\t// Validate response structure before casting\r\n\tconst rawData = result.data;\r\n\tif (!rawData || typeof rawData !== 'object') {\r\n\t\tconst error = new Error('[ERROR] Invalid response | Expected object, received: ' + typeof rawData);\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\t\r\n\t// WordPress wp_send_json_success returns { success: true, data: {...} }\r\n\t// We need to return the full structure, not just the inner data\r\n\tlet response: StartGenerationResponse;\r\n\t\r\n\tif ('success' in rawData && typeof rawData.success === 'boolean') {\r\n\t\t// This is already the WordPress response structure we want\r\n\t\tresponse = rawData as StartGenerationResponse;\r\n\t} else {\r\n\t\t// Wrap it in expected structure\r\n\t\tresponse = {\r\n\t\t\tsuccess: true,\r\n\t\t\tdata: rawData as any\r\n\t\t};\r\n\t}\r\n\t\r\n\t// Validate success\r\n\tif (!response.success) {\r\n\t\tlet errMsg = 'Unknown error';\r\n\t\t\r\n\t\tif (response.message) {\r\n\t\t\terrMsg = response.message;\r\n\t\t} else if (response.data && typeof response.data === 'object' && response.data.message) {\r\n\t\t\terrMsg = response.data.message;\r\n\t\t}\r\n\t\t\r\n\t\tconst error = new Error(`[ERROR] Generation start failed | Error: ${errMsg}`);\r\n\t\tlogger.error(error.message);\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn response;\r\n}\r\n","import { nuclenFetchUpdates } from './api';\r\nimport type { PollingUpdateData, PollingUpdateResponse } from './api';\r\nimport { API_CONFIG } from '../../../shared/constants';\r\nimport * as logger from '../utils/logger';\r\nimport { createStreamingClient, type StreamProgressData } from './streaming';\r\n\r\nexport function NuclenPollAndPullUpdates({\r\n\tintervalMs = API_CONFIG.POLLING_INTERVAL_MS,\r\n\tgenerationId,\r\n\tonProgress = (() => {}) as (processed: number, total: number, data?: any) => void,\r\n\tonComplete = () => {},\r\n\tonError = () => {},\r\n\tmaxAttempts = API_CONFIG.MAX_POLLING_ATTEMPTS,\r\n\ttimeoutMs = API_CONFIG.MAX_POLLING_TIMEOUT_MS,\r\n\tuseExponentialBackoff = false, // Disabled in favor of progressive intervals\r\n\tmaxIntervalMs = 60000, // Maximum interval between polls (60 seconds)\r\n\tuseProgressiveIntervals = true, // Use progressive polling intervals\r\n}: {\r\n\tintervalMs?: number;\r\n\tgenerationId: string;\r\n\tonProgress?: (processed: number, total: number, data?: any) => void;\r\n\tonComplete?: (finalData: PollingUpdateData) => void;\r\n\tonError?: (errMsg: string) => void;\r\n\tmaxAttempts?: number;\r\n\ttimeoutMs?: number;\r\n\tuseExponentialBackoff?: boolean;\r\n\tmaxIntervalMs?: number;\r\n\tuseProgressiveIntervals?: boolean;\r\n}) {\r\n\t// Validate generation ID\r\n\tif (!generationId || generationId.trim() === '') {\r\n\t\tlogger.error('[ERROR] Polling failed | Missing generation ID');\r\n\t\tonError('No generation ID provided for polling');\r\n\t\treturn () => {}; // Return empty cleanup function\r\n\t}\r\n\t\r\n\tlet attemptCount = 0;\r\n\tconst startTime = Date.now();\r\n\tlet currentInterval = intervalMs;\r\n\tlet consecutiveErrors = 0;\r\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\r\n\tlet streamingClient: ReturnType<typeof createStreamingClient> = null;\r\n\t\r\n\t// Disable SSE streaming for now as it's not compatible with batch processing\r\n\t// TODO: Fix SSE to properly handle batch-based generation\r\n\tstreamingClient = null;\r\n\t\r\n\t// // Try to use streaming first\r\n\t// streamingClient = createStreamingClient(generationId, {\r\n\t// \tonProgress: (data: StreamProgressData) => {\r\n\t// \t\t// Convert streaming data to polling format\r\n\t// \t\tonProgress(data.processed, data.total, {\r\n\t// \t\t\tresults: data.results,\r\n\t// \t\t\tprogress: data.progress,\r\n\t// \t\t\tstatus: data.status\r\n\t// \t\t});\r\n\t// \t},\r\n\t// \tonComplete: (status: string) => {\r\n\t// \t\t// Streaming completed, fetch final results\r\n\t// \t\tnuclenFetchUpdates(generationId).then(response => {\r\n\t// \t\t\tif (response.success && response.data) {\r\n\t// \t\t\t\tlogger.log(`[DEBUG] Streaming complete, fetched final results | GenID: ${generationId} | Has results: ${!!response.data.results}`);\r\n\t// \t\t\t\tonComplete(response.data);\r\n\t// \t\t\t}\r\n\t// \t\t}).catch(error => {\r\n\t// \t\t\tlogger.error(`[ERROR] Failed to fetch final results after streaming | GenID: ${generationId}`, error);\r\n\t// \t\t});\r\n\t// \t},\r\n\t// \tonError: (error: string) => {\r\n\t// \t\tlogger.warn('Streaming failed, falling back to polling', error);\r\n\t// \t\tstreamingClient = null;\r\n\t// \t\t// Start polling as fallback\r\n\t// \t\tschedulePoll();\r\n\t// \t}\r\n\t// });\r\n\t// \r\n\t// // If streaming is available, start it\r\n\t// if (streamingClient) {\r\n\t// \tlogger.log('Using SSE streaming for progress updates');\r\n\t// \tstreamingClient.start();\r\n\t// }\r\n\t\r\n\t// Calculate current interval based on elapsed time for progressive intervals\r\n\tconst getProgressiveInterval = (elapsed: number): number => {\r\n\t\tif (!useProgressiveIntervals) return intervalMs;\r\n\t\t\r\n\t\tlet accumulatedDuration = 0;\r\n\t\tfor (const stage of API_CONFIG.POLLING_INTERVALS) {\r\n\t\t\tif (elapsed < accumulatedDuration + stage.duration) {\r\n\t\t\t\treturn stage.interval;\r\n\t\t\t}\r\n\t\t\taccumulatedDuration += stage.duration;\r\n\t\t}\r\n\t\t\r\n\t\t// Return the last interval for anything beyond defined stages\r\n\t\treturn API_CONFIG.POLLING_INTERVALS[API_CONFIG.POLLING_INTERVALS.length - 1].interval;\r\n\t};\r\n\t\r\n\tconst schedulePoll = () => {\r\n\t\tif (timeoutId) {\r\n\t\t\tclearTimeout(timeoutId);\r\n\t\t}\r\n\t\t\r\n\t\tconst elapsed = Date.now() - startTime;\r\n\t\t\r\n\t\t// Use progressive intervals if enabled\r\n\t\tif (useProgressiveIntervals) {\r\n\t\t\tcurrentInterval = getProgressiveInterval(elapsed);\r\n\t\t}\r\n\t\t// Apply exponential backoff if enabled and there are errors\r\n\t\telse if (useExponentialBackoff && consecutiveErrors > 0) {\r\n\t\t\tcurrentInterval = Math.min(\r\n\t\t\t\tintervalMs * Math.pow(1.5, consecutiveErrors),\r\n\t\t\t\tmaxIntervalMs\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\ttimeoutId = setTimeout(poll, currentInterval);\r\n\t};\r\n\t\r\n\tconst poll = async () => {\r\n\t\tattemptCount++;\r\n\t\tconst elapsed = Date.now() - startTime;\r\n\t\t\r\n\t\t// Check for timeout conditions\r\n\t\tif (attemptCount > maxAttempts) {\r\n\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\tlogger.warn(`[WARNING] Polling timeout | GenID: ${generationId} | Attempts: ${attemptCount}/${maxAttempts}`);\r\n\t\t\tonError(`polling-timeout:${generationId}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (elapsed > timeoutMs) {\r\n\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\tlogger.warn(`[WARNING] Polling timeout | GenID: ${generationId} | Elapsed: ${elapsed}ms/${timeoutMs}ms`);\r\n\t\t\tonError(`polling-timeout:${generationId}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst pollResults: PollingUpdateResponse = await nuclenFetchUpdates(generationId);\r\n\t\t\tif (!pollResults.success) {\r\n\t\t\t\tconst errMsg = pollResults.message || 'Failed to fetch updates. The task may have been cancelled, or there has been an error. Please see the log file on the setup page or contact support.';\r\n\t\t\t\t\r\n\t\t\t\t// Check if task has been cancelled\r\n\t\t\t\tif (errMsg.includes('Task has been cancelled') || errMsg.includes('cancelled')) {\r\n\t\t\t\t\t// Task was cancelled - stop polling gracefully\r\n\t\t\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\t\t\tlogger.log(`[INFO] Task cancelled | GenID: ${generationId}`);\r\n\t\t\t\t\tonError(`task-cancelled:${generationId}`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Check if this is a \"Polling failed after X attempts\" error from the API\r\n\t\t\t\tif (errMsg.includes('Polling failed after') && errMsg.includes('attempts')) {\r\n\t\t\t\t\t// This is a terminal error from the API - trigger redirect\r\n\t\t\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\t\t\t// This is expected behavior - don't throw an error\r\n\t\t\t\t\tonError(`polling-timeout:${generationId}`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Only log as error if it's not an expected polling limit\r\n\t\t\t\tlogger.error(`[ERROR] Poll failed | GenID: ${generationId} | Error: ${errMsg}`);\r\n\t\t\t\tthrow new Error(errMsg);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Reset error count on successful response\r\n\t\t\tconsecutiveErrors = 0;\r\n\t\t\tcurrentInterval = intervalMs;\r\n\r\n\t\t\tconst {\r\n\t\t\t\tprocessed,\r\n\t\t\t\ttotal,\r\n\t\t\t\tsuccessCount = processed,\r\n\t\t\t\tfailCount,\r\n\t\t\t\tfinalReport,\r\n\t\t\t\tresults,\r\n\t\t\t\tworkflow,\r\n\t\t\t} = pollResults.data;\r\n\r\n\t\t\tlogger.log(`[DEBUG] Poll progress | GenID: ${generationId} | Progress: ${processed}/${total} | Success: ${successCount} | Failed: ${failCount || 0}`);\r\n\t\t\tlogger.log(`[DEBUG] Poll data | GenID: ${generationId} | Has results: ${!!results} | Results count: ${results ? Object.keys(results).length : 0} | Workflow: ${workflow || 'undefined'}`);\r\n\t\t\tonProgress(processed, total, pollResults.data);\r\n\r\n\t\t\tif (processed >= total) {\r\n\t\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\t\tlogger.log(`[SUCCESS] Polling complete | GenID: ${generationId} | Total: ${total} | Success: ${successCount} | Failed: ${failCount || 0}`);\r\n\t\t\t\tlogger.log(`[DEBUG] Passing to onComplete | GenID: ${generationId} | Results: ${JSON.stringify(results)} | Workflow: ${workflow}`);\r\n\t\t\t\tonComplete({\r\n\t\t\t\t\tprocessed,\r\n\t\t\t\t\ttotal,\r\n\t\t\t\t\tsuccessCount,\r\n\t\t\t\t\tfailCount,\r\n\t\t\t\t\tfinalReport,\r\n\t\t\t\t\tresults,\r\n\t\t\t\t\tworkflow,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Schedule next poll\r\n\t\t\t\tschedulePoll();\r\n\t\t\t}\r\n\t\t} catch (err: unknown) {\r\n\t\t\tconsecutiveErrors++;\r\n\t\t\t\r\n\t\t\t// Check if we should continue retrying\r\n\t\t\tif (consecutiveErrors >= 3) {\r\n\t\t\t\tif (timeoutId) clearTimeout(timeoutId);\r\n\t\t\t\tconst message = err instanceof Error ? err.message : 'Unknown error';\r\n\t\t\t\tlogger.error(`[ERROR] Polling failed | GenID: ${generationId} | Attempts: ${attemptCount} | Consecutive errors: ${consecutiveErrors} | Error: ${message}`);\r\n\t\t\t\tonError(`polling-error:${generationId}`);\r\n\t\t\t} else {\r\n\t\t\t\tconst message = err instanceof Error ? err.message : 'Unknown error';\r\n\t\t\t\tlogger.warn(`[RETRY] Polling error | GenID: ${generationId} | Consecutive errors: ${consecutiveErrors}/3 | Error: ${message}`);\r\n\t\t\t\t// Continue polling with backoff\r\n\t\t\t\tschedulePoll();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t// Start polling only if not streaming\r\n\tif (!streamingClient) {\r\n\t\tlogger.log(`[INFO] Starting polling | GenID: ${generationId} | Initial interval: ${currentInterval}ms | Max attempts: ${maxAttempts} | Progressive: ${useProgressiveIntervals}`);\r\n\t\tpoll();\r\n\t}\r\n\r\n\t// Return a cleanup function to allow manual cancellation\r\n\treturn () => {\r\n\t\tif (timeoutId) {\r\n\t\t\tclearTimeout(timeoutId);\r\n\t\t}\r\n\t\tif (streamingClient) {\r\n\t\t\tstreamingClient.stop();\r\n\t\t}\r\n\t};\r\n}\r\n","import * as logger from './logger';\r\n\r\nexport function displayError(message: string, _context?: Record<string, any>): void {\r\n\t// Log error with context\r\n\tlogger.error(`[ERROR] UI Error | ${message}`);\r\n\t\r\n\t// Create toast notification\r\n\tconst toast = document.createElement('div');\r\n\ttoast.className = 'nuclen-error-toast';\r\n\ttoast.innerHTML = message;\r\n\tdocument.body.appendChild(toast);\r\n\t\r\n\t// Remove toast after 5 seconds\r\n\tsetTimeout(() => {\r\n\t\tif (toast.parentNode) {\r\n\t\t\ttoast.remove();\r\n\t\t}\r\n\t}, 5000);\r\n}\r\n","export const REST_ENDPOINT =\r\n\twindow.nuclenAdminVars?.rest_receive_content ||\r\n\t'/wp-json/nuclear-engagement/v1/receive-content';\r\n\r\nexport const REST_NONCE = window.nuclenAdminVars?.rest_nonce || '';\r\nimport { displayError } from '../utils/displayError';\r\nimport * as logger from '../utils/logger';\r\n\r\nexport function nuclenAlertApiError(errMsg: string): void {\r\n\tconst cleanMsg = errMsg.replace(/<[^>]+>/g, '');\r\n\t\r\n\t// Handle task cancelled gracefully\r\n\tif (cleanMsg.includes('task-cancelled:') || cleanMsg.includes('Task has been cancelled')) {\r\n\t\t// Extract generation ID if present in the error message\r\n\t\tlet generationId = '';\r\n\t\tif (errMsg.includes('task-cancelled:')) {\r\n\t\t\tconst parts = errMsg.split(':');\r\n\t\t\tif (parts.length > 1) {\r\n\t\t\t\tgenerationId = parts[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Show a notice and redirect to tasks page\r\n\t\tlogger.log('Task cancelled - redirecting to tasks page');\r\n\t\tdisplayError('Task has been cancelled. Redirecting to tasks page...');\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst tasksUrl = `${window.nuclenAdminVars?.admin_url || '/wp-admin/'}admin.php?page=nuclear-engagement-tasks`;\r\n\t\t\twindow.location.href = tasksUrl;\r\n\t\t}, 2000);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\t// Handle polling timeout gracefully - check for various patterns\r\n\tif (cleanMsg.includes('Polling failed after') || \r\n\t    cleanMsg.includes('Polling error') || \r\n\t\tcleanMsg.includes('Failed to fetch updates') || \r\n\t    cleanMsg.includes('polling-timeout:') || \r\n\t    cleanMsg.includes('polling-error:')) {\r\n\t\t\r\n\t\t// Extract generation ID if present in the error message\r\n\t\tlet generationId = '';\r\n\t\tif (errMsg.includes('polling-timeout:') || errMsg.includes('polling-error:')) {\r\n\t\t\tconst parts = errMsg.split(':');\r\n\t\t\tif (parts.length > 1) {\r\n\t\t\t\tgenerationId = parts[1];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Instead of showing a notice, redirect directly to tasks page\r\n\t\tlogger.log('Polling timeout/error detected - redirecting to tasks page');\r\n\t\tconst tasksUrl = `${window.nuclenAdminVars?.admin_url || '/wp-admin/'}admin.php?page=nuclear-engagement-tasks`;\r\n\t\twindow.location.href = tasksUrl;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\t// Handle other errors as before\r\n\tif (cleanMsg.includes('Invalid API key')) {\r\n\t\tdisplayError('Your API key is invalid. Please go to the Setup page and enter a new one.');\r\n\t} else if (cleanMsg.includes('Invalid WP App Password')) {\r\n\t\tdisplayError('Your WP App Password is invalid. Please re-generate it on the Setup page.');\r\n\t} else if (cleanMsg.includes('Not enough credits')) {\r\n\t\tdisplayError('Not enough credits. Please top up your account or reduce the number of posts.');\r\n\t} else {\r\n\t\tdisplayError(`Error: ${cleanMsg}`);\r\n\t}\r\n}\r\n\r\nexport async function nuclenStoreGenerationResults(workflow: string, results: unknown) {\r\n\tconst payload = { workflow, results };\r\n\tlet resp: Response;\r\n\ttry {\r\n\t\tresp = await fetch(REST_ENDPOINT, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'X-WP-Nonce': REST_NONCE,\r\n\t\t\t},\r\n\t\t\tcredentials: 'include',\r\n\t\t\tbody: JSON.stringify(payload),\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tlogger.error('Fetch failed in nuclenStoreGenerationResults:', err);\r\n\t\tdisplayError('Network error');\r\n\t\treturn { ok: false, data: { message: 'Network error' } };\r\n\t}\r\n\tlet data: unknown = null;\r\n\tif (resp.ok) {\r\n\t\ttry {\r\n\t\t\tdata = await resp.json();\r\n\t\t} catch {\r\n\t\t\treturn { ok: false, data: { message: 'Invalid JSON' } };\r\n\t\t}\r\n\t}\r\n\treturn { ok: resp.ok, data };\r\n}\r\n","export {\r\n\tnuclenAlertApiError as alertApiError,\r\n\tnuclenStoreGenerationResults as storeGenerationResults,\r\n} from '../generation/results';\r\n\r\nexport interface PostResult {\r\n\tdate?: string;\r\n\tsummary?: string;\r\n\tquestions?: Array<{\r\n\tquestion?: string;\r\n\tanswers?: string[];\r\n\texplanation?: string;\r\n\t}>;\r\n\t[key: string]: unknown;\r\n}\r\n\r\nexport function populateQuizMetaBox(\r\n\tpostResult: PostResult,\r\n\tfinalDate?: string\r\n): void {\r\n\tconst { date, questions } = postResult;\r\n\tconst newDate = finalDate || date;\r\n\tconst dateField = document.querySelector<HTMLInputElement>('input[name=\"nuclen_quiz_data[date]\"]');\r\n\tif (dateField) {\r\n\t\tdateField.readOnly = false;\r\n\t\tdateField.value = newDate || '';\r\n\t\tdateField.readOnly = true;\r\n\t}\r\n\r\n\tif (Array.isArray(questions)) {\r\n\t\tquestions.forEach((q, qIndex) => {\r\n\t\t\tconst questionSelector = `input[name=\"nuclen_quiz_data[questions][${qIndex}][question]\"]`;\r\n\t\t\tconst questionInput = document.querySelector<HTMLInputElement>(questionSelector);\r\n\t\t\tif (questionInput) {\r\n\t\t\t\tquestionInput.value = q.question || '';\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(q.answers)) {\r\n\t\t\t\tq.answers.forEach((ans: string, aIndex: number) => {\r\n\t\t\t\t\tconst ansSelector = `input[name=\"nuclen_quiz_data[questions][${qIndex}][answers][${aIndex}]\"]`;\r\n\t\t\t\t\tconst ansInput = document.querySelector<HTMLInputElement>(ansSelector);\r\n\t\t\t\t\tif (ansInput) {\r\n\t\t\t\t\t\tansInput.value = ans;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst explanationSelector = `textarea[name=\"nuclen_quiz_data[questions][${qIndex}][explanation]\"]`;\r\n\t\t\tconst explanationTextarea = document.querySelector<HTMLTextAreaElement>(explanationSelector);\r\n\t\t\tif (explanationTextarea) {\r\n\t\t\t\texplanationTextarea.value = q.explanation || '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function populateSummaryMetaBox(\r\n\tpostResult: PostResult,\r\n\tfinalDate?: string\r\n): void {\r\n\tconst { date, summary } = postResult;\r\n\tconst newDate = finalDate || date;\r\n\tconst dateField = document.querySelector<HTMLInputElement>('input[name=\"nuclen_summary_data[date]\"]');\r\n\tif (dateField) {\r\n\t\tdateField.readOnly = false;\r\n\t\tdateField.value = newDate || '';\r\n\t\tdateField.readOnly = true;\r\n\t}\r\n\r\n\tif (typeof window.tinymce !== 'undefined') {\r\n\t\tconst tiny = window.tinymce as {\r\n\t\tget?: (id: string) => {\r\n\t\tsetContent?: (html: string) => void;\r\n\t\tsave?: () => void;\r\n\t\t};\r\n\t};\r\n\t\tlet editor: { setContent?: (html: string) => void; save?: () => void } | undefined;\r\n\t\tif (typeof tiny.get === 'function') {\r\n\t\t\teditor = tiny.get('nuclen_summary_data_summary');\r\n\t\t}\r\n\t\tif (editor && typeof editor.setContent === 'function') {\r\n\t\t\teditor.setContent(summary || '');\r\n\t\t\teditor.save?.();\r\n\t\t} else {\r\n\t\t\tconst summaryField = document.querySelector<HTMLTextAreaElement>('textarea[name=\"nuclen_summary_data[summary]\"]');\r\n\t\t\tif (summaryField) {\r\n\t\t\t\tsummaryField.value = summary || '';\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tconst summaryField = document.querySelector<HTMLTextAreaElement>('textarea[name=\"nuclen_summary_data[summary]\"]');\r\n\t\tif (summaryField) {\r\n\t\t\tsummaryField.value = summary || '';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import {\r\n\talertApiError,\r\n\tpopulateQuizMetaBox,\r\n\tpopulateSummaryMetaBox,\r\n\tstoreGenerationResults,\r\n\ttype PostResult,\r\n} from './single-generation-utils';\r\nimport {\r\n\tNuclenStartGeneration,\r\n\tNuclenPollAndPullUpdates,\r\n} from '../nuclen-admin-generate';\r\nimport type { StartGenerationResponse, PollingUpdateData } from '../generation/api';\r\nimport { displayError } from '../utils/displayError';\r\nimport * as logger from '../utils/logger';\r\n\r\n// Store active polling cleanup functions\r\nconst activePollingCleanups = new Map<string, () => void>();\r\n\r\nexport function initSingleGenerationButtons(): void {\r\n\t// Use passive listener for better scroll performance\r\n\tdocument.addEventListener('click', async (event: MouseEvent) => {\r\n\t\tconst target = event.target;\r\n\t\tif (!(target instanceof HTMLElement)) return;\r\n\t\tif (!target.classList.contains('nuclen-generate-single')) return;\r\n\r\n\t\tconst btn = target as HTMLButtonElement;\r\n\t\tconst postId = btn.dataset.postId;\r\n\t\tconst workflow = btn.dataset.workflow;\r\n\t\tif (!postId || !workflow) {\r\n\t\t\tdisplayError('Missing data attributes: postId or workflow not found.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Clean up any existing polling for this button\r\n\t\tconst buttonKey = `${postId}-${workflow}`;\r\n\t\tconst existingCleanup = activePollingCleanups.get(buttonKey);\r\n\t\tif (existingCleanup) {\r\n\t\t\texistingCleanup();\r\n\t\t\tactivePollingCleanups.delete(buttonKey);\r\n\t\t}\r\n\r\n\t\tbtn.disabled = true;\r\n\t\tbtn.textContent = 'Generating...';\r\n\r\n\t\ttry {\r\n\t\t\tconst startResp: StartGenerationResponse | {\r\n\t\tok: boolean;\r\n\t\tstatus: number;\r\n\t\terror?: string;\r\n\t\tdata?: { generation_id?: string; [key: string]: unknown };\r\n\t\tgeneration_id?: string;\r\n\t\t} = await NuclenStartGeneration({\r\n\t\t\tnuclen_selected_post_ids: JSON.stringify([postId]),\r\n\t\t\tnuclen_selected_generate_workflow: workflow,\r\n\t\t\tsource: 'single',\r\n\t\t});\r\n\r\n\t\t\tif ('ok' in startResp && !startResp.ok) {\r\n\t\t\t\talertApiError((startResp as { error?: string }).error || 'Generation failed');\r\n\t\t\t\tbtn.textContent = 'Generate';\r\n\t\t\t\tbtn.disabled = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst generationId =\r\n\t\tstartResp.data?.generation_id ||\r\n\t\tstartResp.generation_id ||\r\n\t\t'gen_' + Math.random().toString(36).substring(2);\r\n\r\n\t\t\tconst cleanupPolling = NuclenPollAndPullUpdates({\r\n\t\t\t\tintervalMs: 5000,\r\n\t\t\t\tgenerationId,\r\n\t\t\t\tonProgress() {\r\n\t\t\t\t\tbtn.textContent = 'Generating...';\r\n\t\t\t\t},\r\n\t\t\t\tasync onComplete({ results, workflow: wf }: PollingUpdateData) {\r\n\t\t\t\t\t// Remove cleanup function since polling completed\r\n\t\t\t\t\tactivePollingCleanups.delete(buttonKey);\r\n\t\t\t\t\tlogger.log(`[DEBUG] onComplete called | PostID: ${postId} | Workflow: ${wf} | Has results: ${!!results} | Results type: ${typeof results}`);\r\n\t\t\t\t\tif (results) {\r\n\t\t\t\t\t\tlogger.log(`[DEBUG] Results content: ${JSON.stringify(results)}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (results && typeof results === 'object') {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tconst { ok, data } = await storeGenerationResults(wf, results);\r\n\t\t\t\t\t\t\tconst respData = data as Record<string, unknown>;\r\n\t\t\t\t\t\t\tif (ok && !('code' in respData)) {\r\n\t\t\t\t\t\t\t\tconst postResult = results[postId] as PostResult;\r\n\t\t\t\t\t\t\t\tlogger.log(`[DEBUG] Post result for ${postId}: ${JSON.stringify(postResult)}`);\r\n\t\t\t\t\t\t\t\tconst finalDate = respData.finalDate && typeof respData.finalDate === 'string' ? (respData.finalDate as string) : undefined;\r\n\t\t\t\t\t\t\t\tif (postResult) {\r\n\t\t\t\t\t\t\t\t\tif (wf === 'quiz') {\r\n\t\t\t\t\t\t\t\t\t\tpopulateQuizMetaBox(postResult, finalDate);\r\n\t\t\t\t\t\t\t\t\t} else if (wf === 'summary') {\r\n\t\t\t\t\t\t\t\t\t\tpopulateSummaryMetaBox(postResult, finalDate);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbtn.textContent = 'Stored!';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tlogger.warn(`[WARNING] No result found for post ${postId} in results object`);\r\n\t\t\t\t\t\t\t\t\tbtn.textContent = 'Done (no data for this post)!';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlogger.error('Error storing single-generation results in WP:', respData);\r\n\t\t\t\t\t\t\t\tbtn.textContent = 'Generation failed!';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tlogger.error('Fetch error calling /receive-content endpoint:', err);\r\n\t\t\t\t\t\t\tbtn.textContent = 'Generation failed!';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogger.warn(`[WARNING] No results received | PostID: ${postId} | Results: ${results}`);\r\n\t\t\t\t\t\tbtn.textContent = 'Done (no data)!';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbtn.disabled = false;\r\n\t\t\t\t},\r\n\t\t\t\tonError(errMsg) {\r\n\t\t\t\t\t// Remove cleanup function since polling errored\r\n\t\t\t\t\tactivePollingCleanups.delete(buttonKey);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if this is a polling timeout or error\r\n\t\t\t\t\tif (errMsg.startsWith('polling-timeout:') || errMsg.startsWith('polling-error:')) {\r\n\t\t\t\t\t\tconst generationId = errMsg.split(':')[1];\r\n\t\t\t\t\t\t// Redirect to tasks page\r\n\t\t\t\t\t\twindow.location.href = `${window.nuclenAdminVars?.admin_url || '/wp-admin/'}admin.php?page=nuclear-engagement-tasks`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talertApiError(errMsg);\r\n\t\t\t\t\t\tbtn.textContent = 'Generate';\r\n\t\t\t\t\t\tbtn.disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// Store the cleanup function\r\n\t\t\tactivePollingCleanups.set(buttonKey, cleanupPolling);\r\n\t\t} catch (err: unknown) {\r\n\t\t\tconst message = err instanceof Error ? err.message : 'Unknown error';\r\n\t\t\talertApiError(message);\r\n\t\t\tbtn.textContent = 'Generate';\r\n\t\t\tbtn.disabled = false;\r\n\t\t}\r\n\t});\r\n\t\r\n\t// Clean up all active polling when page unloads\r\n\twindow.addEventListener('beforeunload', () => {\r\n\t\tactivePollingCleanups.forEach(cleanup => cleanup());\r\n\t\tactivePollingCleanups.clear();\r\n\t});\r\n}\r\n","import { initSingleGenerationButtons } from './single/single-generation-handlers';\r\n\r\ninitSingleGenerationButtons();\r\n","export interface GeneratePageElements {\r\n\tstep1: HTMLDivElement | null;\r\n\tstep2: HTMLDivElement | null;\r\n\tupdatesSection: HTMLDivElement | null;\r\n\tupdatesContent: HTMLDivElement | null;\r\n\trestartBtn: HTMLButtonElement | null;\r\n\tgetPostsBtn: HTMLButtonElement | null;\r\n\tgoBackBtn: HTMLButtonElement | null;\r\n\tgenerateForm: HTMLFormElement | null;\r\n\tsubmitBtn: HTMLButtonElement | null;\r\n\tpostsCountEl: HTMLSpanElement | null;\r\n\tstepBar1: HTMLElement | null;\r\n\tstepBar2: HTMLElement | null;\r\n\t// Removed stepBar3 and stepBar4 - no longer needed\r\n\tcreditsInfoEl: HTMLParagraphElement | null;\r\n}\r\n\r\nexport function getGeneratePageElements(): GeneratePageElements {\r\n\treturn {\r\n\t\tstep1: document.getElementById('nuclen-step-1') as HTMLDivElement | null,\r\n\t\tstep2: document.getElementById('nuclen-step-2') as HTMLDivElement | null,\r\n\t\tupdatesSection: document.getElementById('nuclen-updates-section') as HTMLDivElement | null,\r\n\t\tupdatesContent: document.getElementById('nuclen-updates-content') as HTMLDivElement | null,\r\n\t\trestartBtn: document.getElementById('nuclen-restart-btn') as HTMLButtonElement | null,\r\n\t\tgetPostsBtn: document.getElementById('nuclen-get-posts-btn') as HTMLButtonElement | null,\r\n\t\tgoBackBtn: document.getElementById('nuclen-go-back-btn') as HTMLButtonElement | null,\r\n\t\tgenerateForm: document.getElementById('nuclen-generate-form') as HTMLFormElement | null,\r\n\t\tsubmitBtn: document.getElementById('nuclen-submit-btn') as HTMLButtonElement | null,\r\n\t\tpostsCountEl: document.getElementById('nuclen-posts-count') as HTMLSpanElement | null,\r\n\t\tstepBar1: document.getElementById('nuclen-step-bar-1'),\r\n\t\tstepBar2: document.getElementById('nuclen-step-bar-2'),\r\n\t\t// Removed stepBar3 and stepBar4 - no longer needed\r\n\t\tcreditsInfoEl: document.getElementById('nuclen-credits-info') as HTMLParagraphElement | null,\r\n\t};\r\n}\r\n","export function nuclenShowElement(el: HTMLElement | null): void {\r\n\tif (!el) return;\r\n\tel.classList.remove('nuclen-hidden');\r\n}\r\n\r\nexport function nuclenHideElement(el: HTMLElement | null): void {\r\n\tif (!el) return;\r\n\tel.classList.add('nuclen-hidden');\r\n}\r\n\r\nexport function nuclenUpdateProgressBarStep(stepEl: HTMLElement | null, state: string): void {\r\n\tif (!stepEl) return;\r\n\tstepEl.classList.remove(\r\n\t\t'ne-step-bar__step--todo',\r\n\t\t'ne-step-bar__step--current',\r\n\t\t'ne-step-bar__step--done',\r\n\t\t'ne-step-bar__step--failed'\r\n\t);\r\n\tstepEl.classList.add(`ne-step-bar__step--${state}`);\r\n}\r\n\r\n/**\r\n * Fetch remaining credits from the SaaS.\r\n */\r\ninterface CreditsResponse {\r\n\tsuccess: boolean;\r\n\tmessage?: string;\r\n\tdata: {\r\n\tremaining_credits?: number;\r\n\tmessage?: string;\r\n\t[key: string]: unknown;\r\n\t};\r\n}\r\n\r\nexport async function nuclenCheckCreditsAjax(): Promise<number> {\r\n\tif (!window.nuclenAjax || !window.nuclenAjax.ajax_url) {\r\n\t\tthrow new Error('Missing nuclenAjax configuration (ajax_url).');\r\n\t}\r\n\tif (!window.nuclenAjax.fetch_action) {\r\n\t\tthrow new Error('Missing fetch_action in nuclenAjax configuration.');\r\n\t}\r\n\tconst formData = new FormData();\r\n\tformData.append('action', window.nuclenAjax.fetch_action);\r\n\tif (window.nuclenAjax.nonce) {\r\n\t\tformData.append('security', window.nuclenAjax.nonce);\r\n\t}\r\n\tconst result = await nuclenFetchWithRetry<CreditsResponse>(\r\n\t\twindow.nuclenAjax.ajax_url,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t}\r\n\t);\r\n\tif (!result.ok) {\r\n\t\tthrow new Error(result.error || `HTTP ${result.status}`);\r\n\t}\r\n\tconst data = result.data as CreditsResponse;\r\n\tif (!data.success) {\r\n\t\tthrow new Error(data.message || data.data?.message || 'Failed to fetch credits from SaaS');\r\n\t}\r\n\tif (typeof data.data.remaining_credits === 'number') {\r\n\t\treturn data.data.remaining_credits;\r\n\t}\r\n\tthrow new Error(\"No 'remaining_credits' in response\");\r\n}\r\n\r\n/**\r\n * Toggle summary settings visibility.\r\n */\r\nexport function nuclenToggleSummaryFields(): void {\r\n\tconst generateTypeEl = document.getElementById('nuclen_generate_workflow') as HTMLSelectElement | null;\r\n\tconst summarySettingsEl = document.getElementById('nuclen-summary-settings') as HTMLDivElement | null;\r\n\tconst summaryParagraphOptions = document.getElementById('nuclen-summary-paragraph-options') as HTMLDivElement | null;\r\n\tconst summaryBulletOptions = document.getElementById('nuclen-summary-bullet-options') as HTMLDivElement | null;\r\n\tconst summaryFormatEl = document.getElementById('nuclen_summary_format') as HTMLSelectElement | null;\r\n\r\n\tif (!generateTypeEl || !summarySettingsEl || !summaryParagraphOptions || !summaryBulletOptions || !summaryFormatEl) {\r\n\t\treturn;\r\n\t}\r\n\tif (generateTypeEl.value === 'summary') {\r\n\t\tsummarySettingsEl.classList.remove('nuclen-hidden');\r\n\t\tif (summaryFormatEl.value === 'paragraph') {\r\n\t\t\tsummaryParagraphOptions.classList.remove('nuclen-hidden');\r\n\t\t\tsummaryBulletOptions.classList.add('nuclen-hidden');\r\n\t\t} else {\r\n\t\t\tsummaryParagraphOptions.classList.add('nuclen-hidden');\r\n\t\t\tsummaryBulletOptions.classList.remove('nuclen-hidden');\r\n\t\t}\r\n\t} else {\r\n\t\tsummarySettingsEl.classList.add('nuclen-hidden');\r\n\t\tsummaryParagraphOptions.classList.add('nuclen-hidden');\r\n\t\tsummaryBulletOptions.classList.add('nuclen-hidden');\r\n\t}\r\n}\r\n\r\nimport { nuclenFetchWithRetry } from '../nuclen-admin-generate';\r\n","export interface NuclenFilterValues {\r\n\tpostStatus: string;\r\n\tcategory: string;\r\n\tauthor: string;\r\n\tpostType: string;\r\n\tworkflow: string;\r\n\tallowRegenerate: boolean;\r\n\tregenerateProtected: boolean;\r\n\tsummaryFormat: string;\r\n\tsummaryLength: string;\r\n\tsummaryNumberOfItems: string;\r\n}\r\n\r\nexport function nuclenCollectFilters(): NuclenFilterValues {\r\n\tconst postStatusEl = document.getElementById('nuclen_post_status') as HTMLSelectElement | null;\r\n\tconst categoryEl = document.getElementById('nuclen_category') as HTMLSelectElement | null;\r\n\tconst authorEl = document.getElementById('nuclen_author') as HTMLSelectElement | null;\r\n\tconst postTypeEl = document.getElementById('nuclen_post_type') as HTMLSelectElement | null;\r\n\tconst workflowEl = document.getElementById('nuclen_generate_workflow') as HTMLSelectElement | null;\r\n\tconst allowRegenEl = document.getElementById('nuclen_allow_regenerate_data') as HTMLInputElement | null;\r\n\tconst protectRegenEl = document.getElementById('nuclen_regenerate_protected_data') as HTMLInputElement | null;\r\n\tconst summaryFormatEl = document.getElementById('nuclen_summary_format') as HTMLSelectElement | null;\r\n\tconst summaryLengthEl = document.getElementById('nuclen_summary_length') as HTMLSelectElement | null;\r\n\tconst summaryNumberEl = document.getElementById('nuclen_summary_number_of_items') as HTMLSelectElement | null;\r\n\treturn {\r\n\t\tpostStatus: postStatusEl ? postStatusEl.value : '',\r\n\t\tcategory: categoryEl ? categoryEl.value : '',\r\n\t\tauthor: authorEl ? authorEl.value : '',\r\n\t\tpostType: postTypeEl ? postTypeEl.value : '',\r\n\t\tworkflow: workflowEl ? workflowEl.value : '',\r\n\t\tallowRegenerate: !!allowRegenEl && allowRegenEl.checked,\r\n\t\tregenerateProtected: !!protectRegenEl && protectRegenEl.checked,\r\n\t\tsummaryFormat: summaryFormatEl ? summaryFormatEl.value : '',\r\n\t\tsummaryLength: summaryLengthEl ? summaryLengthEl.value : '',\r\n\t\tsummaryNumberOfItems: summaryNumberEl ? summaryNumberEl.value : '',\r\n\t};\r\n}\r\n\r\nexport function nuclenAppendFilters(formData: FormData, filters: NuclenFilterValues): void {\r\n\tformData.append('nuclen_post_status', filters.postStatus);\r\n\tformData.append('nuclen_category', filters.category);\r\n\tformData.append('nuclen_author', filters.author);\r\n\tformData.append('nuclen_post_type', filters.postType);\r\n\tformData.append('nuclen_generate_workflow', filters.workflow);\r\n\tformData.append('nuclen_allow_regenerate_data', filters.allowRegenerate ? '1' : '0');\r\n\tformData.append('nuclen_regenerate_protected_data', filters.regenerateProtected ? '1' : '0');\r\n\tformData.append('nuclen_summary_format', filters.summaryFormat);\r\n\tformData.append('nuclen_summary_length', filters.summaryLength);\r\n\tformData.append('nuclen_summary_number_of_items', filters.summaryNumberOfItems);\r\n}\r\n\r\nexport function nuclenStoreFilters(filters: NuclenFilterValues): void {\r\n\tconst selectedWorkflowEl = document.getElementById('nuclen_selected_generate_workflow') as HTMLInputElement | null;\r\n\tconst selectedSummaryFormatEl = document.getElementById('nuclen_selected_summary_format') as HTMLInputElement | null;\r\n\tconst selectedSummaryLengthEl = document.getElementById('nuclen_selected_summary_length') as HTMLInputElement | null;\r\n\tconst selectedSummaryNumberEl = document.getElementById('nuclen_selected_summary_number_of_items') as HTMLInputElement | null;\r\n\tconst selectedPostStatusEl = document.getElementById('nuclen_selected_post_status') as HTMLInputElement | null;\r\n\tconst selectedPostTypeEl = document.getElementById('nuclen_selected_post_type') as HTMLInputElement | null;\r\n\r\n\tif (selectedWorkflowEl) {\r\n\t\tselectedWorkflowEl.value = filters.workflow;\r\n\t}\r\n\tif (selectedSummaryFormatEl) {\r\n\t\tselectedSummaryFormatEl.value = filters.summaryFormat;\r\n\t}\r\n\tif (selectedSummaryLengthEl) {\r\n\t\tselectedSummaryLengthEl.value = filters.summaryLength;\r\n\t}\r\n\tif (selectedSummaryNumberEl) {\r\n\t\tselectedSummaryNumberEl.value = filters.summaryNumberOfItems;\r\n\t}\r\n\tif (selectedPostStatusEl) {\r\n\t\tselectedPostStatusEl.value = filters.postStatus;\r\n\t}\r\n\tif (selectedPostTypeEl) {\r\n\t\tselectedPostTypeEl.value = filters.postType;\r\n\t}\r\n}\r\n\r\n","import { nuclenFetchWithRetry } from '../nuclen-admin-generate';\r\nimport {\r\n\tnuclenShowElement,\r\n\tnuclenHideElement,\r\n\tnuclenUpdateProgressBarStep,\r\n\tnuclenCheckCreditsAjax,\r\n} from './generate-page-utils';\r\nimport type { GeneratePageElements } from './elements';\r\nimport {\r\n\tnuclenCollectFilters,\r\n\tnuclenAppendFilters,\r\n\tnuclenStoreFilters,\r\n\ttype NuclenFilterValues,\r\n} from './filters';\r\nimport { displayError } from '../utils/displayError';\r\nimport * as logger from '../utils/logger';\r\n\r\ninterface PostsCountResponse {\r\n        success: boolean;\r\n        message?: string;\r\n        data: {\r\n        count: number;\r\n\tpost_ids: string[];\r\n\tmessage?: string;\r\n\t[key: string]: unknown;\r\n        };\r\n}\r\n\r\nasync function requestPostsCount(\r\n\tajaxUrl: string,\r\n\tfilters: NuclenFilterValues,\r\n): Promise<PostsCountResponse | null> {\r\n\tconst formData = new FormData();\r\n\tformData.append('action', 'nuclen_get_posts_count');\r\n\tif (window.nuclenAjax?.nonce) {\r\n\t\tformData.append('security', window.nuclenAjax.nonce);\r\n\t}\r\n\tnuclenAppendFilters(formData, filters);\r\n\tconst result = await nuclenFetchWithRetry<PostsCountResponse>(ajaxUrl, {\r\n\t\tmethod: 'POST',\r\n\t\tbody: formData,\r\n\t\tcredentials: 'same-origin',\r\n\t});\r\n\treturn result.ok ? (result.data as PostsCountResponse) : null;\r\n}\r\n\r\nasync function updateCreditsInfo(elements: GeneratePageElements, count: number): Promise<void> {\r\n\ttry {\r\n\t\tconst remainingCredits = await nuclenCheckCreditsAjax();\r\n\t\tconst neededCredits = count;\r\n\t\tif (elements.creditsInfoEl) {\r\n\t\t\telements.creditsInfoEl.textContent = `This will consume ${neededCredits} credit(s). You have ${remainingCredits} left.`;\r\n\t\t}\r\n\t\tif (remainingCredits < neededCredits) {\r\n\t\t\tdisplayError('Not enough credits. Please top up or reduce the number of posts.');\r\n\t\t\tif (elements.submitBtn) {\r\n\t\t\t\telements.submitBtn.disabled = true;\r\n\t\t\t}\r\n\t\t} else if (elements.submitBtn) {\r\n\t\t\tnuclenShowElement(elements.submitBtn);\r\n\t\t\telements.submitBtn.disabled = false;\r\n\t\t}\r\n\t} catch (err: unknown) {\r\n\t\tlogger.error('Error fetching remaining credits:', err);\r\n\t\tconst message = err instanceof Error ? err.message : 'Unknown error';\r\n\t\tif (elements.creditsInfoEl) {\r\n\t\t\telements.creditsInfoEl.textContent = `Unable to retrieve your credits: ${message}`;\r\n\t\t}\r\n\t\tif (elements.submitBtn) {\r\n\t\t\tnuclenHideElement(elements.submitBtn);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function initStep1(elements: GeneratePageElements): void {\r\n\telements.getPostsBtn?.addEventListener('click', async () => {\r\n\t\tif (!window.nuclenAjax || !window.nuclenAjax.ajax_url) {\r\n\t\t\tdisplayError('Error: Ajax is not configured properly. Please check the plugin settings.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (elements.postsCountEl) {\r\n\t\t\telements.postsCountEl.innerText = 'Loading posts...';\r\n\t\t}\r\n\t\tconst filters: NuclenFilterValues = nuclenCollectFilters();\r\n\t\tconst data = await requestPostsCount(window.nuclenAjax.ajax_url || '', filters);\r\n\t\tif (!data) {\r\n\t\t\tlogger.error('Error retrieving post count');\r\n\t\t\tif (elements.postsCountEl) {\r\n\t\t\t\telements.postsCountEl.innerText = 'Error retrieving post count.';\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!data.success) {\r\n\t\t\tif (elements.postsCountEl) {\r\n\t\t\t\telements.postsCountEl.innerText = 'Error retrieving post count.';\r\n\t\t\t}\r\n\t\t\tconst errMsg = data.message || data.data?.message;\r\n\t\t\tif (errMsg) {\r\n\t\t\t\tif (errMsg.includes('Invalid API key')) {\r\n\t\t\t\t\tdisplayError('Your Gold Code (API key) is invalid. Please create a new one on the NE app and enter it on the plugin Setup page.');\r\n\t\t\t\t} else if (errMsg.includes('Invalid WP App Password')) {\r\n\t\t\t\t\tdisplayError('Your WP App Password is invalid. Please go to the plugin Setup page and re-generate it.');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdisplayError(errMsg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst count = data.data.count as number;\r\n\t\tconst foundPosts = data.data.post_ids;\r\n\t\tconst selectedPostIdsEl = document.getElementById('nuclen_selected_post_ids') as HTMLInputElement | null;\r\n\t\tif (selectedPostIdsEl) {\r\n\t\t\tselectedPostIdsEl.value = JSON.stringify(foundPosts);\r\n\t\t}\r\n\t\tnuclenStoreFilters(filters);\r\n\t\tnuclenHideElement(elements.step1);\r\n\t\tnuclenShowElement(elements.step2);\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar1, 'done');\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar2, 'current');\r\n\t\tif (count === 0) {\r\n\t\t\tif (elements.postsCountEl) {\r\n\t\t\t\telements.postsCountEl.innerText = 'No posts found with these filters.';\r\n\t\t\t}\r\n\t\t\tif (elements.submitBtn) {\r\n\t\t\t\tnuclenHideElement(elements.submitBtn);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (elements.postsCountEl) {\r\n\t\t\telements.postsCountEl.innerText = `Number of posts to process: ${count}`;\r\n\t\t}\r\n\t\tawait updateCreditsInfo(elements, count);\r\n\t});\r\n}\r\n","import * as logger from './logger';\r\n\r\nexport function displaySuccess(message: string, _context?: Record<string, any>): void {\r\n\t// Log success with context\r\n\tlogger.log(`[SUCCESS] UI Success | ${message}`);\r\n\t\r\n\t// Create toast notification\r\n\tconst toast = document.createElement('div');\r\n\ttoast.className = 'nuclen-success-toast';\r\n\ttoast.innerHTML = message;\r\n\tdocument.body.appendChild(toast);\r\n\t\r\n\t// Remove toast after 5 seconds\r\n\tsetTimeout(() => {\r\n\t\tif (toast.parentNode) {\r\n\t\t\ttoast.remove();\r\n\t\t}\r\n\t}, 5000);\r\n}\r\n\r\nexport function displayPageMessage(message: string, type: 'success' | 'info' | 'warning' = 'success'): void {\r\n\t// Log message\r\n\tlogger.log(`[PAGE MESSAGE] ${type.toUpperCase()} | ${message}`);\r\n\t\r\n\t// Find or create message container\r\n\tlet messageContainer = document.getElementById('nuclen-page-message');\r\n\tif (!messageContainer) {\r\n\t\t// Create it after the heading\r\n\t\tconst heading = document.querySelector('.nuclen-heading');\r\n\t\tif (heading) {\r\n\t\t\tmessageContainer = document.createElement('div');\r\n\t\t\tmessageContainer.id = 'nuclen-page-message';\r\n\t\t\theading.insertAdjacentElement('afterend', messageContainer);\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (messageContainer) {\r\n\t\t// Clear any existing message\r\n\t\tmessageContainer.innerHTML = '';\r\n\t\t\r\n\t\t// Create message element\r\n\t\tconst messageEl = document.createElement('div');\r\n\t\tmessageEl.className = `nuclen-page-message nuclen-page-message--${type}`;\r\n\t\tmessageEl.innerHTML = `\r\n\t\t\t<div class=\"nuclen-page-message__icon\">\r\n\t\t\t\t${type === 'success' ? '✓' : type === 'warning' ? '⚠' : 'ℹ'}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"nuclen-page-message__text\">${message}</div>\r\n\t\t`;\r\n\t\t\r\n\t\tmessageContainer.appendChild(messageEl);\r\n\t\t\r\n\t\t// Auto-hide after 10 seconds for non-warning messages\r\n\t\tif (type !== 'warning') {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tmessageEl.style.opacity = '0';\r\n\t\t\t\tsetTimeout(() => messageEl.remove(), 300);\r\n\t\t\t}, 10000);\r\n\t\t}\r\n\t}\r\n}","import {\r\n\tNuclenStartGeneration,\r\n\t// NuclenPollAndPullUpdates, // Commented out - polling disabled for now\r\n} from '../nuclen-admin-generate';\r\nimport type {\r\n\tStartGenerationResponse,\r\n\t// PollingUpdateData, // Commented out - polling disabled for now\r\n} from '../generation/api';\r\nimport {\r\n\t// nuclenShowElement, // Commented out - not needed anymore\r\n\tnuclenHideElement,\r\n\tnuclenUpdateProgressBarStep,\r\n} from './generate-page-utils';\r\nimport type { GeneratePageElements } from './elements';\r\nimport { error } from '../../../shared/logger';\r\nimport {\r\n\tnuclenAlertApiError,\r\n} from '../generation/results';\r\nimport { displayError } from '../utils/displayError';\r\nimport { displaySuccess, displayPageMessage } from '../utils/displaySuccess';\r\n\r\n// Store active polling cleanup function\r\nlet activePollingCleanup: (() => void) | null = null;\r\n\r\n// Function removed - results are stored by backend during polling\r\n// This function is no longer needed since we're redirecting to tasks page\r\n\r\nexport function initStep2(elements: GeneratePageElements): void {\r\n\telements.generateForm?.addEventListener('submit', async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t\r\n\t\t// Clean up any existing polling - commented out since polling is disabled\r\n\t\t/*\r\n\t\tif (activePollingCleanup) {\r\n\t\t\tactivePollingCleanup();\r\n\t\t\tactivePollingCleanup = null;\r\n\t\t}\r\n\t\t*/\r\n\t\tif (!window.nuclenAdminVars || !window.nuclenAdminVars.ajax_url) {\r\n\t\t\tdisplayError('Error: WP Ajax config not found. Please check the plugin settings.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar2, 'done');\r\n\t\t// Remove step 3 & 4 - no longer showing real-time progress\r\n\t\tnuclenHideElement(elements.step2);\r\n\t\tif (elements.submitBtn) {\r\n\t\t\telements.submitBtn.disabled = true;\r\n\t\t\telements.submitBtn.innerHTML = '<span class=\"spinner is-active\" style=\"float: none; margin: 0 8px 0 0;\"></span>Starting generation...';\r\n\t\t}\r\n\t\t\r\n\t\t// Show loading message in the page\r\n\t\tdisplayPageMessage('Starting content generation...', 'info');\r\n\t\ttry {\r\n\t\t\tconst formDataObj = Object.fromEntries(new FormData(elements.generateForm!).entries());\r\n\t\t\tconst startResp: StartGenerationResponse = await NuclenStartGeneration(\r\n\t\t\t\tformDataObj\r\n\t\t\t);\r\n\t\t\t// Extract generation_id - WordPress returns it in data object\r\n\t\t\tlet generationId = '';\r\n\t\t\t\r\n\t\t\t// The actual structure from WordPress wp_send_json_success is:\r\n\t\t\t// { success: true, data: { generation_id: \"...\", ... } }\r\n\t\t\tif (startResp && startResp.data && startResp.data.generation_id) {\r\n\t\t\t\tgenerationId = String(startResp.data.generation_id);\r\n\t\t\t}\r\n\t\t\t// Fallback checks for other possible structures\r\n\t\t\telse if (startResp && startResp.generation_id) {\r\n\t\t\t\tgenerationId = String(startResp.generation_id);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Final fallback to random ID if not found\r\n\t\t\tif (!generationId) {\r\n\t\t\t\terror('Generation ID not found in response, using fallback');\r\n\t\t\t\tgenerationId = 'gen_' + Math.random().toString(36).substring(2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Show success message in the page\r\n\t\t\tdisplayPageMessage('✅ Generation task started successfully! Content is being generated in the background.', 'success');\r\n\t\t\t\r\n\t\t\t// Also show a success toast\r\n\t\t\tdisplaySuccess('Redirecting to tasks page in a moment...');\r\n\t\t\t\r\n\t\t\t// Redirect to tasks page after 3 seconds\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst tasksUrl = `${window.nuclenAdminVars?.admin_url || '/wp-admin/'}admin.php?page=nuclear-engagement-tasks`;\r\n\t\t\t\twindow.location.href = tasksUrl;\r\n\t\t\t}, 3000);\r\n\t\t\t\r\n\t\t\t// Comment out the polling code for later use\r\n\t\t\t/*\r\n\t\t\tactivePollingCleanup = NuclenPollAndPullUpdates({\r\n\t\t\t\tintervalMs: 5000,\r\n\t\t\t\tgenerationId,\r\n\t\t\t\tonProgress: (processed, total) => {\r\n\t\t\t\t\tconst safeProcessed = processed === undefined ? 0 : processed;\r\n\t\t\t\t\tconst safeTotal = total === undefined ? 0 : total;\r\n\t\t\t\t\tif (elements.updatesContent) {\r\n\t\t\t\t\t\t// Show simple progress message\r\n\t\t\t\t\t\tconst progressPercent = safeTotal > 0 ? Math.round((safeProcessed / safeTotal) * 100) : 0;\r\n\t\t\t\t\t\telements.updatesContent.innerHTML = `<span class=\"spinner is-active\"></span> Processing: ${safeProcessed} of ${safeTotal} posts completed (${progressPercent}%)`;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonComplete: async ({ failCount, finalReport }: PollingUpdateData) => {\r\n\t\t\t\t\t// Clear the cleanup function since polling completed\r\n\t\t\t\t\tactivePollingCleanup = null;\r\n\t\t\t\t\tnuclenUpdateProgressBarStep(elements.stepBar3, 'done');\r\n\t\t\t\t\tnuclenUpdateProgressBarStep(elements.stepBar4, 'current');\r\n\t\t\t\t\t// Results are already stored by the backend during polling\r\n\t\t\t\t\t// await storeResults(workflow, results);\r\n\t\t\t\t\tupdateCompletionUi(elements, failCount, finalReport);\r\n\t\t\t\t},\r\n\t\t\t\tonError: (errMsg: string) => {\r\n\t\t\t\t\t// Clear the cleanup function since polling errored\r\n\t\t\t\t\tactivePollingCleanup = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Check if this is a polling timeout or error\r\n\t\t\t\t\tif (errMsg.startsWith('polling-timeout:') || errMsg.startsWith('polling-error:')) {\r\n\t\t\t\t\t\tconst generationId = errMsg.split(':')[1];\r\n\t\t\t\t\t\t// Redirect to tasks page\r\n\t\t\t\t\t\twindow.location.href = `${window.nuclenAdminVars?.admin_url || '/wp-admin/'}admin.php?page=nuclear-engagement-tasks`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Handle other errors as failures\r\n\t\t\t\t\t\tnuclenUpdateProgressBarStep(elements.stepBar3, 'failed');\r\n\t\t\t\t\t\tnuclenAlertApiError(errMsg);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (elements.updatesContent) {\r\n\t\t\t\t\t\t\telements.updatesContent.innerText = `Error: ${errMsg}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (elements.submitBtn) {\r\n\t\t\t\t\t\t\telements.submitBtn.disabled = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnuclenShowElement(elements.restartBtn);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t} catch (error: unknown) {\r\n\t\t\t// Handle error without step 3 references\r\n\t\t\tconst message = error instanceof Error ? error.message : 'Unknown error';\r\n\t\t\tnuclenAlertApiError(message);\r\n\t\t\tif (elements.submitBtn) {\r\n\t\t\t\telements.submitBtn.disabled = false;\r\n\t\t\t}\r\n\t\t\t// Don't show restart button since we're redirecting\r\n\t\t}\r\n\t});\r\n\t\r\n\t// Clean up active polling when page unloads - commented out since polling is disabled\r\n\t/*\r\n\twindow.addEventListener('beforeunload', () => {\r\n\t\tif (activePollingCleanup) {\r\n\t\t\tactivePollingCleanup();\r\n\t\t\tactivePollingCleanup = null;\r\n\t\t}\r\n\t});\r\n\t*/\r\n}\r\n","import {\r\n\tnuclenShowElement,\r\n\tnuclenHideElement,\r\n\tnuclenUpdateProgressBarStep,\r\n\tnuclenToggleSummaryFields,\r\n} from './generate-page-utils';\r\nimport type { GeneratePageElements } from './elements';\r\n\r\nexport function initGoBack(elements: GeneratePageElements): void {\r\n\telements.goBackBtn?.addEventListener('click', () => {\r\n\t\tnuclenHideElement(elements.step2);\r\n\t\tnuclenShowElement(elements.step1);\r\n\t\tif (elements.postsCountEl) {\r\n\t\t\telements.postsCountEl.innerText = '';\r\n\t\t}\r\n\t\tif (elements.creditsInfoEl) {\r\n\t\t\telements.creditsInfoEl.textContent = '';\r\n\t\t}\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar1, 'current');\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar2, 'todo');\r\n\t});\r\n}\r\n\r\nexport function initRestart(elements: GeneratePageElements): void {\r\n\telements.restartBtn?.addEventListener('click', () => {\r\n\t\tnuclenHideElement(elements.updatesSection);\r\n\t\tnuclenHideElement(elements.restartBtn);\r\n\t\tnuclenHideElement(elements.step2);\r\n\t\tif (elements.postsCountEl) {\r\n\t\t\telements.postsCountEl.innerText = '';\r\n\t\t}\r\n\t\tif (elements.creditsInfoEl) {\r\n\t\t\telements.creditsInfoEl.textContent = '';\r\n\t\t}\r\n\t\tnuclenShowElement(elements.step1);\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar1, 'current');\r\n\t\tnuclenUpdateProgressBarStep(elements.stepBar2, 'todo');\r\n\t\t// Removed step 3 & 4 updates - no longer needed\r\n\t});\r\n}\r\n\r\nexport function initSummaryToggle(): void {\r\n\tnuclenToggleSummaryFields();\r\n\tconst generateTypeEl = document.getElementById('nuclen_generate_workflow') as HTMLSelectElement | null;\r\n\tconst summaryFormatEl = document.getElementById('nuclen_summary_format') as HTMLSelectElement | null;\r\n\tgenerateTypeEl?.addEventListener('change', nuclenToggleSummaryFields);\r\n\tsummaryFormatEl?.addEventListener('change', nuclenToggleSummaryFields);\r\n}\r\n","import { getGeneratePageElements } from './elements';\r\nimport { initStep1 } from './step1';\r\nimport { initStep2 } from './step2';\r\nimport { initGoBack, initRestart, initSummaryToggle } from './navigation';\r\n\r\nexport function initGeneratePage(): void {\r\n\tconst elements = getGeneratePageElements();\r\n\r\n\t// Initial UI setup - removed step 3 & 4\r\n\tif (elements.step1) elements.step1.classList.remove('nuclen-hidden');\r\n\tif (elements.step2) elements.step2.classList.add('nuclen-hidden');\r\n\tif (elements.updatesSection) elements.updatesSection.classList.add('nuclen-hidden');\r\n\tif (elements.restartBtn) elements.restartBtn.classList.add('nuclen-hidden');\r\n\tif (elements.stepBar1) elements.stepBar1.classList.add('ne-step-bar__step--current');\r\n\tif (elements.stepBar2) elements.stepBar2.classList.add('ne-step-bar__step--todo');\r\n\r\n\tinitStep1(elements);\r\n\tinitStep2(elements);\r\n\tinitGoBack(elements);\r\n\tinitRestart(elements);\r\n\tinitSummaryToggle();\r\n}\r\n","import { initGeneratePage } from './generate/generate-page-handlers';\r\n\r\ninitGeneratePage();\r\n","// admin/ts/nuclen-admin-ui.ts\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\t// Grab tab links as HTMLAnchorElements\r\n\tconst tabs = document.querySelectorAll<HTMLAnchorElement>(\".nav-tab\");\r\n\t// Grab tab content sections as HTMLElements\r\n\tconst contents = document.querySelectorAll<HTMLElement>(\".nuclen-tab-content\");\r\n\r\n\ttabs.forEach((tab) => {\r\n\t\ttab.addEventListener(\"click\", (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tconst target = tab.getAttribute(\"href\");\r\n\t\t\tif (!target) return; // If href is missing, bail\r\n\r\n\t\t\t// Remove active class from all tabs, then add to the one that was clicked\r\n\t\t\ttabs.forEach((t) => t.classList.remove(\"nav-tab-active\"));\r\n\t\t\ttab.classList.add(\"nav-tab-active\");\r\n\r\n\t\t\t// Hide all tab contents, then show only the targeted one\r\n\t\t\tcontents.forEach((c) => {\r\n\t\t\t\tc.style.display = \"none\";\r\n\t\t\t});\r\n\t\t\tconst targetContent = document.querySelector<HTMLElement>(target);\r\n\t\t\tif (targetContent) {\r\n\t\t\t\ttargetContent.style.display = \"block\";\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\r\n\r\n\t// Show/hide the custom theme section\r\n\tconst customThemeSection = document.getElementById(\"nuclen-custom-theme-section\");\r\n\tconst themeRadios = document.querySelectorAll<HTMLInputElement>(\"input[name='nuclen_theme']\");\r\n\r\n\tfunction nuclenUpdateCustomThemeVisibility() {\r\n\t\tconst checkedInput = document.querySelector<HTMLInputElement>(\"input[name='nuclen_theme']:checked\");\r\n\t\t// If either the input or the section is missing, do nothing\r\n\t\tif (!checkedInput || !customThemeSection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst selectedTheme = checkedInput.value;\r\n\t\tif (selectedTheme === \"custom\") {\r\n\t\t\tcustomThemeSection.classList.remove(\"nuclen-hidden\");\r\n\t\t} else {\r\n\t\t\tcustomThemeSection.classList.add(\"nuclen-hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Listen for theme radio changes\r\n\tthemeRadios.forEach((radio) => {\r\n\t\tradio.addEventListener(\"change\", nuclenUpdateCustomThemeVisibility);\r\n\t});\r\n\r\n\t// Initial run on page load\r\n\tnuclenUpdateCustomThemeVisibility();\r\n});\r\n","// nuclen-admin-onboarding.ts\r\nimport { nuclenFetchWithRetry } from './nuclen-admin-generate';\r\nimport { displayError } from './utils/displayError';\r\nimport * as logger from './utils/logger';\r\n\r\ndeclare const jQuery: any;\r\n\r\n// 1) Declare the global shape of window.nePointerData.\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tnePointerData?: NuclenPointerData;\r\n\t}\r\n}\r\n\r\n// 2) Describe the structure of the pointer data\r\nexport interface NuclenPointerData {\r\n\tpointers: NuclenPointer[];\r\n\tajaxurl: string;\r\n\tnonce: string | undefined;\r\n}\r\n\r\n// 3) Each pointer has the properties your PHP code provides\r\nexport interface NuclenPointer {\r\n\tid: string;\r\n\ttarget: string;\r\n\ttitle: string;\r\n\tcontent: string;\r\n\tposition: {\r\n\t\tedge: 'top' | 'bottom' | 'left' | 'right';\r\n\t\talign: 'top' | 'bottom' | 'left' | 'right' | 'center';\r\n\t};\r\n}\r\n\r\n// Wrap our logic in an IIFE\r\n(function ($: any) {\r\n\t$(document).ready(() => {\r\n\t\tconst pointerData = window.nePointerData;\r\n\r\n\t\tif (!pointerData || !pointerData.pointers || pointerData.pointers.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet currentIndex = 0;\r\n\t\tconst pointers = pointerData.pointers;\r\n\t\tconst ajaxurl = pointerData.ajaxurl;\r\n\t\tconst nonce = pointerData.nonce;\r\n\r\n\t\tasync function dismissPointer(id: string) {\r\n\t\t\tconst form = new URLSearchParams();\r\n\t\t\tform.append('action', 'nuclen_dismiss_pointer');\r\n\t\t\tform.append('pointer', id);\r\n\t\t\tif (nonce) {\r\n\t\t\t\tform.append('nonce', nonce);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst result = await nuclenFetchWithRetry(ajaxurl, {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'same-origin',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n\t\t\t\t\tbody: form.toString(),\r\n\t\t\t\t});\r\n\t\t\t\tif (!result.ok) {\r\n\t\t\t\t\tlogger.error('Failed to dismiss pointer:', result.error);\r\n\t\t\t\t\tdisplayError('Failed to dismiss pointer.');\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tlogger.error('Error dismissing pointer:', err);\r\n\t\t\t\tdisplayError('Network error while dismissing pointer.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction showNextPointer() {\r\n\t\t\tif (currentIndex >= pointers.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst ptr = pointers[currentIndex];\r\n\t\t\tconst $target = $(ptr.target);\r\n\r\n\t\t\tif (!$target.length) {\r\n\t\t\t\tcurrentIndex++;\r\n\t\t\t\tshowNextPointer();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$target.pointer({\r\n\t\t\t\tcontent: `<h3>${ptr.title}</h3><p>${ptr.content}</p>`,\r\n\t\t\t\tposition: ptr.position,\r\n\t\t\t\tclose: async () => {\r\n\t\t\t\t\tawait dismissPointer(ptr.id);\r\n\t\t\t\t\tcurrentIndex++;\r\n\t\t\t\t\tshowNextPointer();\r\n\t\t\t\t},\r\n\t\t\t}).pointer('open');\r\n\t\t}\r\n\r\n\t\tshowNextPointer();\r\n\t});\r\n})(jQuery);\r\n","(function(){\r\n\t// Only register blocks if we're in the block editor\r\n\tif (!document.body.classList.contains('block-editor-page')) {\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tinterface WPGlobal {\r\n\tblocks?: { registerBlockType: (...args: unknown[]) => void };\r\n\telement?: { createElement: (...args: unknown[]) => unknown };\r\n\ti18n?: { __: (...args: unknown[]) => string };\r\n\t}\r\n\tconst wp = window.wp as WPGlobal;\r\n\tif (!wp || !wp.blocks || !wp.element || !wp.i18n) {\r\n\t\treturn;\r\n\t}\r\n\tconst { registerBlockType } = wp.blocks;\r\n\tconst { createElement } = wp.element;\r\n\tconst { __ } = wp.i18n;\r\n\tregisterBlockType('nuclear-engagement/quiz', {\r\n\t\tapiVersion: 2,\r\n\t\ttitle: __('Quiz', 'nuclear-engagement'),\r\n\t\ticon: 'editor-help',\r\n\t\tcategory: 'widgets',\r\n\t\tedit: () => createElement('p', null, __('Quiz will render on the front-end.', 'nuclear-engagement')),\r\n\t\tsave: () => null,\r\n\t});\r\n\tregisterBlockType('nuclear-engagement/summary', {\r\n\t\tapiVersion: 2,\r\n\t\ttitle: __('Summary', 'nuclear-engagement'),\r\n\t\ticon: 'excerpt-view',\r\n\t\tcategory: 'widgets',\r\n\t\tedit: () => createElement('p', null, __('Summary will render on the front-end.', 'nuclear-engagement')),\r\n\t\tsave: () => null,\r\n\t});\r\n\tregisterBlockType('nuclear-engagement/toc', {\r\n\t\tapiVersion: 2,\r\n\t\ttitle: __('TOC', 'nuclear-engagement'),\r\n\t\ticon: 'list-view',\r\n\t\tcategory: 'widgets',\r\n\t\tedit: () => createElement('p', null, __('TOC will render on the front-end.', 'nuclear-engagement')),\r\n\t\tsave: () => null,\r\n\t});\r\n})();\r\n"],"names":["API_CONFIG","nuclenFetchWithRetry","url","options","retries","initialDelayMs","timeoutMs","attempt","delay","lastError","controller","timeoutId","response","status","ok","bodyText","data","error","logger.warn","resolve","logger.error","nuclenFetchUpdates","generationId","formData","result","errorMessage","logger.log","_a","NuclenStartGeneration","dataToSend","rawData","errMsg","NuclenPollAndPullUpdates","intervalMs","onProgress","onComplete","onError","maxAttempts","useExponentialBackoff","maxIntervalMs","useProgressiveIntervals","attemptCount","startTime","currentInterval","consecutiveErrors","streamingClient","getProgressiveInterval","elapsed","accumulatedDuration","stage","schedulePoll","poll","pollResults","processed","total","successCount","failCount","finalReport","results","workflow","err","message","displayError","_context","toast","REST_ENDPOINT","REST_NONCE","nuclenAlertApiError","cleanMsg","parts","tasksUrl","nuclenStoreGenerationResults","payload","resp","populateQuizMetaBox","postResult","finalDate","date","questions","newDate","dateField","q","qIndex","questionSelector","questionInput","ans","aIndex","ansSelector","ansInput","explanationSelector","explanationTextarea","populateSummaryMetaBox","summary","tiny","editor","summaryField","activePollingCleanups","initSingleGenerationButtons","event","target","btn","postId","buttonKey","existingCleanup","startResp","alertApiError","cleanupPolling","wf","storeGenerationResults","respData","cleanup","getGeneratePageElements","nuclenShowElement","el","nuclenHideElement","nuclenUpdateProgressBarStep","stepEl","state","nuclenCheckCreditsAjax","nuclenToggleSummaryFields","generateTypeEl","summarySettingsEl","summaryParagraphOptions","summaryBulletOptions","summaryFormatEl","nuclenCollectFilters","postStatusEl","categoryEl","authorEl","postTypeEl","workflowEl","allowRegenEl","protectRegenEl","summaryLengthEl","summaryNumberEl","nuclenAppendFilters","filters","nuclenStoreFilters","selectedWorkflowEl","selectedSummaryFormatEl","selectedSummaryLengthEl","selectedSummaryNumberEl","selectedPostStatusEl","selectedPostTypeEl","requestPostsCount","ajaxUrl","updateCreditsInfo","elements","count","remainingCredits","neededCredits","initStep1","foundPosts","selectedPostIdsEl","displaySuccess","displayPageMessage","type","messageContainer","heading","messageEl","initStep2","formDataObj","initGoBack","initRestart","initSummaryToggle","initGeneratePage","tabs","contents","tab","e","t","c","targetContent","customThemeSection","themeRadios","nuclenUpdateCustomThemeVisibility","checkedInput","radio","$","pointerData","currentIndex","pointers","ajaxurl","nonce","dismissPointer","id","form","showNextPointer","ptr","$target","wp","registerBlockType","createElement","__"],"mappings":"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"}